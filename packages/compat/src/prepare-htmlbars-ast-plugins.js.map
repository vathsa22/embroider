{"version":3,"file":"prepare-htmlbars-ast-plugins.js","sourceRoot":"","sources":["prepare-htmlbars-ast-plugins.ts"],"names":[],"mappings":";;AAGA,iCAqCC;AAvCD,+BAA4B;AAE5B,SAAwB,cAAc,CAAC,QAAa;IAClD,IAAI,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IACpD,KAAK,IAAI,OAAO,IAAI,QAAQ,EAAE,CAAC;QAC7B,MAAM,EAAE,MAAM,EAAE,aAAa,EAAE,OAAO,EAAE,QAAQ,EAAE,GAAG,OAAO,CAAC;QAC7D,IAAI,MAAM,EAAE,CAAC;YACX,sFAAsF;YACtF,IAAI,aAAa,IAAI,CAAC,MAAM,CAAC,aAAa,EAAE,CAAC;gBAC3C,MAAM,CAAC,aAAa,GAAG;oBACrB,WAAW,EAAE,IAAA,WAAI,EAAC,SAAS,EAAE,uBAAuB,CAAC;oBACrD,UAAU,EAAE,cAAc;oBAC1B,MAAM,EAAE,aAAa;iBACtB,CAAC;YACJ,CAAC;YAED,wFAAwF;YACxF,IAAI,MAAM,CAAC,aAAa,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC;gBACnD,MAAM,CAAC,cAAc,GAAG,MAAM,CAAC,aAAa,CAAC;YAC/C,CAAC;YAED,sEAAsE;YACtE,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC;gBAC/B,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;YAC3B,CAAC;YAED,uEAAuE;YACvE,IAAI,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;gBACjC,MAAM,CAAC,QAAQ,GAAG,QAAQ,CAAC;YAC7B,CAAC;QACH,CAAC;IACH,CAAC;IACD,IAAI,OAAO,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAY,EAAE,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IAE7D,2EAA2E;IAC3E,8EAA8E;IAC9E,wBAAwB;IACxB,OAAO,CAAC,OAAO,EAAE,CAAC;IAClB,OAAO,OAAO,CAAC;AACjB,CAAC","sourcesContent":["import type { Transform } from 'babel-plugin-ember-template-compilation';\nimport { join } from 'path';\n\nexport default function loadAstPlugins(registry: any): Transform[] {\n  let wrappers = registry.load('htmlbars-ast-plugin');\n  for (let wrapper of wrappers) {\n    const { plugin, parallelBabel, baseDir, cacheKey } = wrapper;\n    if (plugin) {\n      // if the parallelBabel options were set on the wrapper, but not on the plugin, add it\n      if (parallelBabel && !plugin.parallelBabel) {\n        plugin.parallelBabel = {\n          requireFile: join(__dirname, 'htmlbars-unwrapper.js'),\n          buildUsing: 'unwrapPlugin',\n          params: parallelBabel,\n        };\n      }\n\n      // NOTE: `_parallelBabel` (not `parallelBabel`) is expected by broccoli-babel-transpiler\n      if (plugin.parallelBabel && !plugin._parallelBabel) {\n        plugin._parallelBabel = plugin.parallelBabel;\n      }\n\n      // if the baseDir is set on the wrapper, but not on the plugin, add it\n      if (baseDir && !plugin.baseDir) {\n        plugin.baseDir = baseDir;\n      }\n\n      // if the cacheKey is set on the wrapper, but not on the plugin, add it\n      if (cacheKey && !plugin.cacheKey) {\n        plugin.cacheKey = cacheKey;\n      }\n    }\n  }\n  let plugins = wrappers.map((wrapper: any) => wrapper.plugin);\n\n  // the plugins in the registry historically run in backwards order for dumb\n  // reasons. Embroider keeps them in sensible order, so here is where we do the\n  // compatibility switch.\n  plugins.reverse();\n  return plugins;\n}\n"]}