{"version":3,"file":"babel-plugin-adjust-imports.js","sourceRoot":"","sources":["babel-plugin-adjust-imports.ts"],"names":[],"mappings":";;AAuCA,uBA6BC;AApED,+BAA4B;AAI5B,yDAA+C;AAC/C,uCAAwC;AAGxC,0CAAiG;AACjG,yEAAqE;AAErE,yDAAqD;AA4BrD,SAAwB,IAAI,CAAC,KAAmB;IAC9C,IAAI,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC;IACpB,IAAI,MAAkC,CAAC;IACvC,SAAS,SAAS,CAAC,OAAe;QAChC,IAAI,MAAM,EAAE,CAAC;YACX,OAAO,MAAM,CAAC;QAChB,CAAC;QACD,IAAI,eAAe,GAA0B,IAAA,uBAAY,EACvD,IAAA,WAAI,EAAC,IAAA,gCAAyB,EAAC,OAAO,CAAC,EAAE,eAAe,CAAC,CAC1D,CAAC;QACF,IAAI,QAAQ,GAAG,IAAI,eAAQ,CAAC,eAAe,CAAC,CAAC;QAC7C,MAAM,GAAG;YACP,eAAe;YACf,QAAQ;YACR,YAAY,EAAE,sBAAsB,CAAC,eAAe,EAAE,QAAQ,CAAC;YAC/D,qBAAqB,EAAE,+BAA+B,CAAC,eAAe,CAAC;SACxE,CAAC;QACF,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,OAAO;QACL,OAAO,EAAE;YACP,OAAO,EAAE;gBACP,KAAK,CAAC,IAAyB,EAAE,KAAY;oBAC3C,eAAe,CAAC,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAC1D,CAAC;aACF;SACF;KACF,CAAC;AACJ,CAAC;AAEA,IAAY,CAAC,OAAO,GAAG;IACtB,OAAO,IAAA,WAAI,EAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAC/B,CAAC,CAAC;AAEF,SAAS,eAAe,CAAC,CAAa,EAAE,IAAyB,EAAE,MAAsB;IACvF,IAAI,QAAQ,GAAY,IAAI,CAAC,GAAW,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;IAC5D,IAAI,KAAK,GAAG,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;IAC1C,IAAI,KAAK,GAAG,IAAI,8BAAU,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACpC,IAAI,KAAK,EAAE,CAAC;QACV,UAAU,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;IACtD,CAAC;IAED,IAAI,aAAa,GAAG,MAAM,CAAC,QAAQ,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC;IACrE,IAAI,aAAa,EAAE,CAAC;QAClB,IAAI,KAAK,GAAG,MAAM,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;QACxD,IAAI,KAAK,EAAE,CAAC;YACV,UAAU,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QACtD,CAAC;IACH,CAAC;AACH,CAAC;AAED,SAAS,UAAU,CACjB,CAAa,EACb,IAAyB,EACzB,KAA2B,EAC3B,KAAiB,EACjB,MAAsB,EACtB,QAAgB;IAEhB,IAAI,MAAM,GAAG,iBAAiB,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;IACjD,IAAI,KAAK,CAAC,gBAAgB,EAAE,CAAC;QAC3B,KAAK,IAAI,MAAM,IAAI,KAAK,CAAC,gBAAgB,EAAE,CAAC;YAC1C,IAAI,MAAM,CAAC,aAAa,EAAE,CAAC;gBACzB,IAAI,WAAmB,CAAC;gBACxB,IAAI,IAAA,kBAAW,EAAC,MAAM,CAAC,EAAE,CAAC;oBACxB,WAAW,GAAG,MAAM,CAAC;gBACvB,CAAC;qBAAM,CAAC;oBACN,WAAW,GAAG,IAAA,mBAAY,EAAC,MAAM,CAAC,aAAa,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;gBACrE,CAAC;gBACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC,CAAC;YACzE,CAAC;QACH,CAAC;IACH,CAAC;IACD,IAAI,KAAK,CAAC,mBAAmB,EAAE,CAAC;QAC9B,KAAK,IAAI,cAAc,IAAI,KAAK,CAAC,mBAAmB,EAAE,CAAC;YACrD,IAAI,MAAM,CAAC,YAAY,EAAE,CAAC;gBACxB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CACpB,SAAS,CACP,CAAC,EACD,KAAK,EACL,IAAI,EACJ,gCAAgC,cAAc,EAAE,EAChD,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,eAAe,cAAc,EAAE,CAClE,CACF,CAAC;YACJ,CAAC;QACH,CAAC;IACH,CAAC;AACH,CAAC;AAED,SAAS,SAAS,CAAC,CAAa,EAAE,KAAiB,EAAE,IAAyB,EAAE,MAAc,EAAE,WAAmB;IACjH,IAAI,KAAK,GAAG,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,mBAAmB,EAAE,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC/G,OAAO,CAAC,CAAC,mBAAmB,CAC1B,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE;QACnF,CAAC,CAAC,aAAa,CAAC,WAAW,CAAC;QAC5B,CAAC,CAAC,kBAAkB,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;KAC7E,CAAC,CACH,CAAC;AACJ,CAAC;AAED,SAAS,sBAAsB,CAAC,MAA6B,EAAE,QAAkB;IAC/E,IAAI,YAAY,GAAiB,EAAE,CAAC;IACpC,KAAK,IAAI,IAAI,IAAI,MAAM,CAAC,kBAAkB,EAAE,CAAC;QAC3C,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACtB,KAAK,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;gBACtE,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;oBAC5B,oBAAoB,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;gBAClE,CAAC;YACH,CAAC;QACH,CAAC;QACD,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,KAAK,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;gBACpE,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;oBAC5B,qEAAqE;oBACrE,qEAAqE;oBACrE,sEAAsE;oBACtE,oEAAoE;oBACpE,YAAY;oBACZ,oBAAoB,CAAC,IAAA,kCAAe,EAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,QAAQ,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;gBAC7F,CAAC;YACH,CAAC;QACH,CAAC;QACD,IAAI,IAAI,CAAC,cAAc,EAAE,CAAC;YACxB,KAAK,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;gBACxE,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;oBAC5B,kBAAkB,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;gBAChE,CAAC;YACH,CAAC;QACH,CAAC;QACD,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACtB,KAAK,IAAI,CAAC,QAAQ,EAAE,WAAW,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;gBACtE,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE,CAAC;oBAC5B,kBAAkB,CAAC,IAAA,kCAAe,EAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,QAAQ,EAAE,WAAW,EAAE,YAAY,CAAC,CAAC;gBAC3F,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IACD,OAAO,YAAY,CAAC;AACtB,CAAC;AAED,SAAS,iBAAiB,CAAC,MAAsB,EAAE,QAAgB;IACjE,IAAI,aAA0D,CAAC;IAC/D,IAAI,YAAsF,CAAC;IAC3F,OAAO;QACL,IAAI,aAAa;YACf,IAAI,CAAC,aAAa,EAAE,CAAC;gBACnB,aAAa,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC;YACjF,CAAC;YACD,OAAO,aAAa,CAAC,MAAM,CAAC;QAC9B,CAAC;QACD,IAAI,YAAY;YACd,IAAI,CAAC,YAAY,EAAE,CAAC;gBAClB,YAAY,GAAG,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC;gBACrC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;gBAC3B,IAAI,CAAC,EAAE,CAAC;oBACN,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBACxD,CAAC;YACH,CAAC;YACD,OAAO,YAAY,CAAC,MAAM,CAAC;QAC7B,CAAC;KACF,CAAC;AACJ,CAAC;AAED,SAAS,+BAA+B,CAAC,MAA6B;IACpE,IAAI,YAAY,GAAiB,EAAE,CAAC;IACpC,KAAK,IAAI,IAAI,IAAI,MAAM,CAAC,kBAAkB,EAAE,CAAC;QAC3C,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;YACpB,KAAK,IAAI,CAAC,aAAa,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;gBACnE,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;oBAClB,YAAY,CAAC,kBAAkB,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,GAAG;wBACtD,mBAAmB,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC;6BAC9C,IAAI,EAAE;6BACN,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;qBAC1C,CAAC;gBACJ,CAAC;YACH,CAAC;QACH,CAAC;IACH,CAAC;IACD,OAAO,YAAY,CAAC;AACtB,CAAC;AAED,SAAS,kBAAkB,CACzB,gBAAwB,EACxB,KAAwD;IAExD,IAAI,CAAC,GAAG,IAAA,kDAAuB,EAAC,gBAAgB,CAAC,CAAC;IAClD,IAAI,CAAC,CAAC,EAAE,CAAC;QACP,MAAM,IAAI,KAAK,CACb,sCAAsC,gBAAgB,eAAe,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CACtG,CAAC;IACJ,CAAC;IACD,OAAO,CAAC,CAAC;AACX,CAAC;AAED,SAAS,oBAAoB,CAC3B,IAAY,EACZ,QAAgB,EAChB,KAAkB,EAClB,YAA4C;IAE5C,IAAI,KAAK,CAAC,gBAAgB,IAAI,KAAK,CAAC,mBAAmB,EAAE,CAAC;QACxD,IAAI,KAAK,GAA2C,EAAE,CAAC;QACvD,IAAI,KAAK,CAAC,gBAAgB,EAAE,CAAC;YAC3B,KAAK,CAAC,gBAAgB,GAAG,KAAK,CAAC,gBAAgB,CAAC;QAClD,CAAC;QACD,IAAI,KAAK,CAAC,mBAAmB,EAAE,CAAC;YAC9B,KAAK,CAAC,mBAAmB,GAAG,KAAK,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;QAC/F,CAAC;QACD,YAAY,CAAC,IAAA,WAAI,EAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,GAAG,KAAK,CAAC;IAC7C,CAAC;AACH,CAAC;AAED,SAAS,kBAAkB,CACzB,IAAY,EACZ,QAAgB,EAChB,KAAoB,EACpB,YAA4C;IAE5C,IAAI,KAAK,CAAC,OAAO,EAAE,CAAC;QAClB,IAAI,mBAAmB,GAAa,EAAE,CAAC;QACvC,KAAK,IAAI,aAAa,IAAI,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;YACvD,KAAK,IAAI,SAAS,IAAI,aAAa,EAAE,CAAC;gBACpC,IAAI,CAAC,GAAG,IAAA,kDAAuB,EAAC,SAAS,CAAC,CAAC;gBAC3C,IAAI,CAAC,CAAC,EAAE,CAAC;oBACP,MAAM,IAAI,KAAK,CACb,sCAAsC,SAAS,eAAe,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAC/F,CAAC;gBACJ,CAAC;gBACD,mBAAmB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC;QACH,CAAC;QACD,YAAY,CAAC,IAAA,WAAI,EAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,GAAG,EAAE,mBAAmB,EAAE,CAAC;IAC/D,CAAC;AACH,CAAC","sourcesContent":["import { join } from 'path';\nimport type { NodePath } from '@babel/traverse';\nimport type * as Babel from '@babel/core';\nimport type { types as t } from '@babel/core';\nimport { ImportUtil } from 'babel-import-util';\nimport { readJSONSync } from 'fs-extra';\nimport type { CompatResolverOptions } from './resolver-transform';\nimport type { Package } from '@embroider/core';\nimport { locateEmbroiderWorkingDir, packageName, Resolver, unrelativize } from '@embroider/core';\nimport { snippetToDasherizedName } from './dasherize-component-name';\nimport type { ActivePackageRules, ComponentRules, ModuleRules, TemplateRules } from './dependency-rules';\nimport { appTreeRulesDir } from './dependency-rules';\n\nexport type Options = { appRoot: string };\n\ninterface State {\n  opts: Options;\n}\n\ntype BabelTypes = typeof t;\n\ninterface ExtraImports {\n  [key: string]: {\n    dependsOnComponents?: string[]; // these are already standardized in dasherized form\n    dependsOnModules?: string[];\n  };\n}\n\ntype InternalConfig = {\n  resolverOptions: CompatResolverOptions;\n  resolver: Resolver;\n\n  // rule-based extra dependencies, indexed by filename\n  extraImports: ExtraImports;\n\n  // rule-based extra dependencies, indexed by classical component name\n  componentExtraImports: ExtraImports;\n};\n\nexport default function main(babel: typeof Babel) {\n  let t = babel.types;\n  let cached: InternalConfig | undefined;\n  function getConfig(appRoot: string) {\n    if (cached) {\n      return cached;\n    }\n    let resolverOptions: CompatResolverOptions = readJSONSync(\n      join(locateEmbroiderWorkingDir(appRoot), 'resolver.json')\n    );\n    let resolver = new Resolver(resolverOptions);\n    cached = {\n      resolverOptions,\n      resolver,\n      extraImports: preprocessExtraImports(resolverOptions, resolver),\n      componentExtraImports: preprocessComponentExtraImports(resolverOptions),\n    };\n    return cached;\n  }\n\n  return {\n    visitor: {\n      Program: {\n        enter(path: NodePath<t.Program>, state: State) {\n          addExtraImports(t, path, getConfig(state.opts.appRoot));\n        },\n      },\n    },\n  };\n}\n\n(main as any).baseDir = function () {\n  return join(__dirname, '..');\n};\n\nfunction addExtraImports(t: BabelTypes, path: NodePath<t.Program>, config: InternalConfig) {\n  let filename: string = (path.hub as any).file.opts.filename;\n  let entry = config.extraImports[filename];\n  let adder = new ImportUtil(t, path);\n  if (entry) {\n    applyRules(t, path, entry, adder, config, filename);\n  }\n\n  let componentName = config.resolver.reverseComponentLookup(filename);\n  if (componentName) {\n    let rules = config.componentExtraImports[componentName];\n    if (rules) {\n      applyRules(t, path, rules, adder, config, filename);\n    }\n  }\n}\n\nfunction applyRules(\n  t: BabelTypes,\n  path: NodePath<t.Program>,\n  rules: ExtraImports[string],\n  adder: ImportUtil,\n  config: InternalConfig,\n  filename: string\n) {\n  let lookup = lazyPackageLookup(config, filename);\n  if (rules.dependsOnModules) {\n    for (let target of rules.dependsOnModules) {\n      if (lookup.owningPackage) {\n        let runtimeName: string;\n        if (packageName(target)) {\n          runtimeName = target;\n        } else {\n          runtimeName = unrelativize(lookup.owningPackage, target, filename);\n        }\n        path.node.body.unshift(amdDefine(t, adder, path, target, runtimeName));\n      }\n    }\n  }\n  if (rules.dependsOnComponents) {\n    for (let dasherizedName of rules.dependsOnComponents) {\n      if (lookup.owningEngine) {\n        path.node.body.unshift(\n          amdDefine(\n            t,\n            adder,\n            path,\n            `#embroider_compat/components/${dasherizedName}`,\n            `${lookup.owningEngine.packageName}/components/${dasherizedName}`\n          )\n        );\n      }\n    }\n  }\n}\n\nfunction amdDefine(t: BabelTypes, adder: ImportUtil, path: NodePath<t.Program>, target: string, runtimeName: string) {\n  let value = t.callExpression(adder.import(path, '@embroider/macros', 'importSync'), [t.stringLiteral(target)]);\n  return t.expressionStatement(\n    t.callExpression(t.memberExpression(t.identifier('window'), t.identifier('define')), [\n      t.stringLiteral(runtimeName),\n      t.functionExpression(null, [], t.blockStatement([t.returnStatement(value)])),\n    ])\n  );\n}\n\nfunction preprocessExtraImports(config: CompatResolverOptions, resolver: Resolver): ExtraImports {\n  let extraImports: ExtraImports = {};\n  for (let rule of config.activePackageRules) {\n    if (rule.addonModules) {\n      for (let [filename, moduleRules] of Object.entries(rule.addonModules)) {\n        for (let root of rule.roots) {\n          expandDependsOnRules(root, filename, moduleRules, extraImports);\n        }\n      }\n    }\n    if (rule.appModules) {\n      for (let [filename, moduleRules] of Object.entries(rule.appModules)) {\n        for (let root of rule.roots) {\n          // in general v2 addons can keep their app tree stuff in other places\n          // than \"_app_\" and we would need to check their package.json to see.\n          // But this code is only for applying packageRules to auto-upgraded v1\n          // addons, and those we always organize with their treeForApp output\n          // in _app_.\n          expandDependsOnRules(appTreeRulesDir(root, resolver), filename, moduleRules, extraImports);\n        }\n      }\n    }\n    if (rule.addonTemplates) {\n      for (let [filename, moduleRules] of Object.entries(rule.addonTemplates)) {\n        for (let root of rule.roots) {\n          expandInvokesRules(root, filename, moduleRules, extraImports);\n        }\n      }\n    }\n    if (rule.appTemplates) {\n      for (let [filename, moduleRules] of Object.entries(rule.appTemplates)) {\n        for (let root of rule.roots) {\n          expandInvokesRules(appTreeRulesDir(root, resolver), filename, moduleRules, extraImports);\n        }\n      }\n    }\n  }\n  return extraImports;\n}\n\nfunction lazyPackageLookup(config: InternalConfig, filename: string) {\n  let owningPackage: { result: Package | undefined } | undefined;\n  let owningEngine: { result: ReturnType<Resolver['owningEngine']> | undefined } | undefined;\n  return {\n    get owningPackage() {\n      if (!owningPackage) {\n        owningPackage = { result: config.resolver.packageCache.ownerOfFile(filename) };\n      }\n      return owningPackage.result;\n    },\n    get owningEngine() {\n      if (!owningEngine) {\n        owningEngine = { result: undefined };\n        let p = this.owningPackage;\n        if (p) {\n          owningEngine.result = config.resolver.owningEngine(p);\n        }\n      }\n      return owningEngine.result;\n    },\n  };\n}\n\nfunction preprocessComponentExtraImports(config: CompatResolverOptions): ExtraImports {\n  let extraImports: ExtraImports = {};\n  for (let rule of config.activePackageRules) {\n    if (rule.components) {\n      for (let [componentName, rules] of Object.entries(rule.components)) {\n        if (rules.invokes) {\n          extraImports[dasherizeComponent(componentName, rule)] = {\n            dependsOnComponents: Object.values(rules.invokes)\n              .flat()\n              .map(c => dasherizeComponent(c, rules)),\n          };\n        }\n      }\n    }\n  }\n  return extraImports;\n}\n\nfunction dasherizeComponent(\n  componentSnippet: string,\n  rules: ModuleRules | ComponentRules | ActivePackageRules\n): string {\n  let d = snippetToDasherizedName(componentSnippet);\n  if (!d) {\n    throw new Error(\n      `unable to parse component snippet \"${componentSnippet}\" from rule ${JSON.stringify(rules, null, 2)}`\n    );\n  }\n  return d;\n}\n\nfunction expandDependsOnRules(\n  root: string,\n  filename: string,\n  rules: ModuleRules,\n  extraImports: InternalConfig['extraImports']\n) {\n  if (rules.dependsOnModules || rules.dependsOnComponents) {\n    let entry: InternalConfig['extraImports'][string] = {};\n    if (rules.dependsOnModules) {\n      entry.dependsOnModules = rules.dependsOnModules;\n    }\n    if (rules.dependsOnComponents) {\n      entry.dependsOnComponents = rules.dependsOnComponents.map(c => dasherizeComponent(c, rules));\n    }\n    extraImports[join(root, filename)] = entry;\n  }\n}\n\nfunction expandInvokesRules(\n  root: string,\n  filename: string,\n  rules: TemplateRules,\n  extraImports: InternalConfig['extraImports']\n) {\n  if (rules.invokes) {\n    let dependsOnComponents: string[] = [];\n    for (let componentList of Object.values(rules.invokes)) {\n      for (let component of componentList) {\n        let d = snippetToDasherizedName(component);\n        if (!d) {\n          throw new Error(\n            `unable to parse component snippet \"${component}\" from rule ${JSON.stringify(rules, null, 2)}`\n          );\n        }\n        dependsOnComponents.push(d);\n      }\n    }\n    extraImports[join(root, filename)] = { dependsOnComponents };\n  }\n}\n"]}