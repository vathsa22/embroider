{"version":3,"file":"v1-addon.js","sourceRoot":"","sources":["v1-addon.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,2DAA6C;AAC7C,+BAAwD;AACxD,mCAA2C;AAC3C,uCAAsD;AAEtD,sEAA0C;AAC1C,qDAA2D;AAC3D,kFAAwD;AACxD,2DAAiE;AAEjE,gFAA8C;AAC9C,oDAA4B;AAC5B,8EAAoD;AACpD,qCAA2C;AAE3C,0CAA0D;AAE1D,0DAAiC;AACjC,kEAAyC;AACzC,qDAAqE;AAErE,sEAA6C;AAC7C,kFAA8C;AAC9C,gHAAqF;AACrF,iEAKgC;AAChC,4FAAgE;AAChE,mCAAmC;AACnC,kGAA4D;AAC5D,sEAA4C;AAI5C,MAAM,cAAc,GAAoB,MAAM,CAAC,MAAM,CAAC;IACpD,OAAO;IACP,cAAc;IACd,QAAQ;IACR,oBAAoB;IACpB,cAAc;IACd,KAAK;IACL,QAAQ;IACR,QAAQ;IACR,uEAAuE;IACvE,8CAA8C;CAC/C,CAAoB,CAAC;AAEtB,MAAM,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC;IACrC,SAAS;IACT,cAAc;IACd,uBAAuB;IACvB,yBAAyB;IACzB,YAAY;IACZ,eAAe;IACf,eAAe;IACf,kBAAkB;IAClB,oBAAoB;IACpB,eAAe;CAChB,CAAC,CAAC;AAEH,MAAM,cAAc,GAAG;IACrB,GAAG,EAAE,YAAY;IACjB,KAAK,EAAE,cAAc;IACrB,cAAc,EAAE,oBAAoB;IACpC,iBAAiB,EAAE,uBAAuB;IAC1C,oBAAoB,EAAE,yBAAyB;IAC/C,MAAM,EAAE,eAAe;IACvB,MAAM,EAAE,eAAe;IACvB,SAAS,EAAE,kBAAkB;IAC7B,cAAc,EAAE,oBAAoB;IACpC,MAAM,EAAE,eAAe;CACxB,CAAC;AAEF,MAAM,iBAAiB,GAAG,OAAO,CAAC;AAClC,MAAM,sBAAsB,GAAG,YAAY,CAAC;AAE5C,8EAA8E;AAC9E,qBAAqB;AACrB,MAAqB,OAAO;IAC1B,YACY,aAA4B,EAC5B,YAA+B,EAC/B,GAAc,EAChB,YAA0B,EAC1B,QAAgB;QAJd,kBAAa,GAAb,aAAa,CAAe;QAC5B,iBAAY,GAAZ,YAAY,CAAmB;QAC/B,QAAG,GAAH,GAAG,CAAW;QAChB,iBAAY,GAAZ,YAAY,CAAc;QAC1B,aAAQ,GAAR,QAAQ,CAAQ;QAExB,IAAI,aAAa,CAAC,QAAQ,EAAE,CAAC;YAC3B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC9C,CAAC;IACH,CAAC;IAED,wEAAwE;IACxE,sEAAsE;IACtE,8EAA8E;IAC9E,6EAA6E;IAC7E,uEAAuE;IACvE,yBAAyB;IACzB,EAAE;IACF,8EAA8E;IAC9E,8EAA8E;IAC9E,qEAAqE;IACrE,wEAAwE;IACxE,EAAE;IACF,2EAA2E;IAC3E,oEAAoE;IACpE,aAAa;IACb,eAAe,CAAC,SAAoB;QAClC,iDAAiD;QACjD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,yEAAyE;IAEzE,IAAY,2BAA2B;QACrC,IAAI,OAAO,GAAG,IAAA,sCAAc,EAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QAC1D,sCAAsC;QACtC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,IAAA,8BAAuB,EAAC,CAAC,CAAC,CAAC,CAAC;QAClE,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACvB,IAAI,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,8CAA8C,EAAE;gBACjF,KAAK,EAAE,CAAC,IAAA,uBAAgB,EAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC;aAC1D,CAAC,CAAC;YACH,IAAI,IAAI,GAAe;gBACrB,YAAY;gBACZ,YAAY,EAAE,KAAK;gBACnB,mBAAmB,EAAE;oBACnB,oBAAoB;oBACpB,sCAAsC;oBACtC,4BAA4B;iBAC7B;gBACD,UAAU,EAAE,OAAO;aACpB,CAAC;YACF,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,yCAAyC,CAAC,EAAE,IAAI,CAAC,CAAC;QAC5E,CAAC;IACH,CAAC;IAEO,cAAc,CAAC,QAAa;QAClC,2DAA2D;QAC3D,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,4BAA4B,CAAC,CAAC;QAEpD,sEAAsE;QACtE,yEAAyE;QACzE,0EAA0E;QAC1E,0EAA0E;QAC1E,0EAA0E;QAC1E,2EAA2E;QAC3E,UAAU;QACV,EAAE;QACF,2EAA2E;QAC3E,4EAA4E;QAC5E,sEAAsE;QACtE,eAAe;QACf,QAAQ,CAAC,MAAM,CAAC,UAAU,EAAE,oBAAoB,CAAC,CAAC;QAClD,QAAQ,CAAC,GAAG,CAAC,UAAU,EAAE;YACvB,IAAI,EAAE,2BAA2B;YACjC,GAAG,EAAE,KAAK;YACV,MAAM,EAAE,IAAI;YACZ,MAAM,CAA4B,IAAU;gBAC1C,IAAI,IAAI,CAAC,MAAM,CAAC,2BAA2B,EAAE,CAAC;oBAC5C,OAAO,IAAI,mCAAqB,CAAC,IAAI,CAAC,CAAC;gBACzC,CAAC;qBAAM,CAAC;oBACN,+DAA+D;oBAC/D,mBAAmB;oBACnB,OAAO,IAAI,CAAC;gBACd,CAAC;YACH,CAAC;SACF,CAAC,CAAC;QAEH,2EAA2E;QAC3E,6CAA6C;QAC7C,IAAI,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAE/C,wEAAwE;QACxE,mEAAmE;QACnE,wEAAwE;QACxE,2EAA2E;QAC3E,SAAS;QACT,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAEzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACtB,gEAAgE;YAChE,yEAAyE;YACzE,yDAAyD;YACzD,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,iBAAiB,CAAC,CAAC;YACzC,QAAQ,CAAC,GAAG,CAAC,IAAI,EAAE;gBACjB,IAAI,EAAE,sBAAsB;gBAC5B,GAAG,EAAE,IAAI;gBACT,MAAM,CAAC,IAAU;oBACf,OAAO,IAAI,CAAC;gBACd,CAAC;aACF,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAED,yEAAyE;IACzE,6CAA6C;IACrC,cAAc;QACpB,IAAI,CAAC,IAAI,CAAC,2BAA2B,EAAE,CAAC;YACtC,uBAAuB;YACvB,OAAO,KAAK,CAAC;QACf,CAAC;QACD,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,sCAAsC,CAAC,EAAE,CAAC;YAClG,gDAAgD;YAChD,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IACE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAC5B,CAAC,CAAM,EAAE,EAAE,CACT,CAAC,CAAC,IAAI,KAAK,oBAAoB,IAAI,gBAAM,CAAC,SAAS,CAAC,gBAAM,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,CAC/G,EACD,CAAC;YACD,+EAA+E;YAC/E,OAAO,IAAI,CAAC;QACd,CAAC;QAED,OAAO,KAAK,CAAC;IACf,CAAC;IAEO,gBAAgB;;QACtB,IACE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAC5B,CAAC,CAAM,EAAE,EAAE,CACT,CAAC,CAAC,IAAI,KAAK,sBAAsB;YACjC,gBAAM,CAAC,SAAS,CAAC,gBAAM,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,iBAAiB,CAAC,CACrF,EACD,CAAC;YACD,8DAA8D;YAC9D,gEAAgE;YAChE,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IACE,IAAI,CAAC,aAAa,CAAC,OAAO;YAC1B,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,iBAAiB,CAAC;YAC7C,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,yBAAyB,EACvE,CAAC;YACD,kEAAkE;YAClE,qCAAqC;YACrC,OAAO,IAAI,CAAC;QACd,CAAC;QAED,IAAI,CAAC,MAAA,MAAA,MAAA,MAAA,IAAI,CAAC,OAAO,CAAC,KAAK,0CAAE,OAAO,0CAAE,MAAM,CAAC,0BAA0B,CAAC,0CAAE,MAAM,mCAAI,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC;YACvF,sEAAsE;YACtE,SAAS;YACT,OAAO,IAAI,CAAC;QACd,CAAC;QAED,kEAAkE;QAClE,wEAAwE;QACxE,gBAAgB;QAChB,OAAO,IAAI,CAAC,cAAc,EAAE,CAAC;IAC/B,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;IAC/B,CAAC;IAED,2EAA2E;IAC3E,8EAA8E;IAC9E,oBAAoB;IACpB,IAAc,WAAW;QACvB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,WAAW,CAAC;IACtD,CAAC;IAED,IAAc,cAAc;QAC1B,yEAAyE;QACzE,sBAAsB;QACtB,IAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QAC9C,IAAI,IAAI,GAAc,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;QACjG,GAAG,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC;QAE1B,wEAAwE;QACxE,4EAA4E;QAC5E,wEAAwE;QACxE,OAAO,GAAG,CAAC,IAAI,CAAC;QAChB,OAAO,GAAG,CAAC,MAAM,CAAC;QAClB,OAAO,GAAG,CAAC,OAAO,CAAC;QAEnB,OAAO,GAAG,CAAC;IACb,CAAC;IAGD,IAAI,IAAI;QACN,6DAA6D;QAC7D,yEAAyE;QACzE,wCAAwC;QACxC,OAAO,IAAA,cAAO,EAAC,IAAA,aAAS,EAAC,EAAE,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAE,CAAC,CAAC;IAC/D,CAAC;IAGD,IAAY,UAAU;QACpB,iEAAiE;QACjE,MAAM,GAAG,GAAG,OAAO,CAAE,IAAI,CAAC,aAAgC,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAE1F,IAAI,OAAO,GAAG,KAAK,UAAU,EAAE,CAAC;YAC9B,OAAO,GAAG,CAAC,SAAS,CAAC;QACvB,CAAC;aAAM,CAAC;YACN,OAAO,GAAG,CAAC;QACb,CAAC;IACH,CAAC;IAED,IAAc,OAAO;QACnB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;YAChC,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;YAChC,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QACpC,CAAC;QACD,yEAAyE;QACzE,oEAAoE;QACpE,wEAAwE;QACxE,sEAAsE;QACtE,aAAa;QACb,EAAE;QACF,sEAAsE;QACtE,wEAAwE;QACxE,0EAA0E;QAC1E,wEAAwE;QACxE,IAAI,YAAY,GACd,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;QAC9G,IAAI,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,YAAY,CAAC,CAAC;QAC9C,IAAI,OAAO,CAAC,KAAK,EAAE,CAAC;YAClB,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;YACjD,IAAI,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;gBAC1B,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;YACxD,CAAC;QACH,CAAC;QACD,IAAI,OAAO,CAAC,iBAAiB,CAAC,EAAE,CAAC;YAC/B,OAAO,CAAC,iBAAiB,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAC7E,CAAC;QAED,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,IAAI,UAAU,EAAE,CAAC;YACpD,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC;QAC7C,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;QACvC,CAAC;QAED,OAAO,OAAO,CAAC;IACjB,CAAC;IAES,UAAU,CAAC,GAAG,SAAmB;QACzC,8DAA8D;QAC9D,MAAM,SAAS,GAAG,IAAA,wBAAY,EAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACnD,OAAO,OAAO,CACZ,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACxB,OAAO;YACL,qEAAqE;YACrE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;gBACzB,iDAAiD;gBACjD,CAAC,SAAS,CAAC,SAAS,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBAC9E,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAClC,CAAC;QACJ,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAEO,kBAAkB,CAAC,QAAgB;QACzC,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,CAAC;YACvC,sEAAsE;YACtE,uBAAuB;YACvB,OAAO,KAAK,CAAC;QACf,CAAC;QACD,KAAK,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,IAAI,MAAM,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,CAAC;YAC9D,IAAI,UAAU,KAAK,QAAQ,EAAE,CAAC;gBAC5B,OAAO,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,UAAU,CAAC;YAChE,CAAC;QACH,CAAC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAGO,YAAY,CAAC,QAAuB;QAC1C,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE,CAAC;YAClC,OAAO,KAAK,CAAC;QACf,CAAC;QAED,2EAA2E;QAC3E,qEAAqE;QACrE,2EAA2E;QAC3E,4CAA4C;QAC5C,OAAO,CACL,IAAI,CAAC,aAAa,CAAC,SAAS,IAAI,IAAA,qBAAU,EAAC,IAAA,WAAI,EAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAClH,CAAC;IACJ,CAAC;IAED,WAAW;QACT,OAAO,OAAO,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,gBAAgB,CAAC,CAAC;IAC/G,CAAC;IAED,4EAA4E;IAC5E,uEAAuE;IACvE,WAAW;IACH,sBAAsB,CAAC,QAAgB;QAC7C,QAAQ,QAAQ,EAAE,CAAC;YACjB,KAAK,OAAO;gBACV,OAAO;oBACL,OAAO,EAAE,CAAC,WAAW,CAAC;iBACvB,CAAC;YACJ,KAAK,QAAQ;gBACX,OAAO;oBACL,OAAO,EAAE,cAAc;iBACxB,CAAC;YACJ,KAAK,oBAAoB;gBACvB,OAAO;oBACL,OAAO,EAAE,cAAc;iBACxB,CAAC;YACJ,KAAK,KAAK;gBACR,OAAO;oBACL,OAAO,EAAE,CAAC,WAAW,CAAC;oBACtB,OAAO,EAAE,iBAAiB;iBAC3B,CAAC;YACJ,KAAK,QAAQ;gBACX,OAAO;oBACL,OAAO,EAAE,UAAU,IAAI,CAAC,UAAU,EAAE;iBACrC,CAAC;YACJ,KAAK,QAAQ;gBACX,OAAO;oBACL,OAAO,EAAE,QAAQ;iBAClB,CAAC;QACN,CAAC;IACH,CAAC;IAES,SAAS,CAAC,QAAuB;QACzC,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,OAAO,EAAE,GAAG,EAAE;YACnD,uEAAuE;YACvE,qEAAqE;YACrE,cAAc;YACd,IAAI,MAAM,GAAG,IAAA,eAAQ,EAAC,IAAI,CAAC,IAAI,EAAE,IAAA,WAAI,EAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACxG,IAAI,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,EAAE,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5E,OAAO,IAAA,yBAAW,EAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC1C,CAAC,CAAE,CAAC;IACN,CAAC;IAGD,IAAc,QAAQ;QACpB,IAAI,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,CAAC;YAChD,OAAO,IAAI,4BAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,CAAC;aAAM,CAAC;YACN,OAAO,IAAI,8BAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC;IACH,CAAC;IAGD,IAAY,UAAU;QACpB,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,KAAK,UAAU,EAAE,CAAC;YACxD,OAAO,IAAI,CAAC,aAAa,CAAC,UAAU,EAAE,CAAC;QACzC,CAAC;QACD,OAAO,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;IACjC,CAAC;IAED,sCAAsC;IAC9B,SAAS,CAAC,IAAU;;QAC1B,sEAAsE;QACtE,yBAAyB;QACzB,IAAI,GAAG,IAAA,yBAAW,EAAC,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC;QAEvD,IAAI,IAAI,CAAC,aAAa,CAAC,sBAAsB,EAAE,IAAI,CAAA,MAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,0CAAE,MAAM,IAAG,CAAC,EAAE,CAAC;YAC5G,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,EAAE;gBAC3D,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ;aACtC,CAAC,CAAC;QACL,CAAC;QAED,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,IAAI,EAAE,GAAG,EAAE,IAAI,CAAC,UAAU,EAAE;YACjE,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ;SACtC,CAAC,CAAC;QAEH,qEAAqE;QACrE,uBAAuB;QACvB,IAAI,GAAG,IAAA,yBAAW,EAAC,IAAI,EAAE;YACvB,MAAM,EAAE,IAAI,CAAC,UAAU;SACxB,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IACd,CAAC;IAGS,iBAAiB;QACzB,IAAI,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC;QAClC,IAAI,qBAAqB,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,IAAI,KAAK,iBAAiB,CAAC,CAAC;QACrG,IAAI,OAAO,CAAC;QAEZ,IAAI,qBAAqB,EAAE,CAAC;YAC1B,OAAO,GAAG,qBAAqB,CAAC,GAAG,CAAC,OAAO,CAAC;QAC9C,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,EAAE,CAAC;YACvC,cAAc,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC;QACzC,CAAC;QAED,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC;YAC1B,cAAc,CAAC,KAAK,GAAG,EAAE,CAAC;QAC5B,CAAC;QACD,IAAI,WAAW,GAAG,cAAc,CAAC,KAAyB,CAAC;QAE3D,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,iBAAiB,CAAC,EAAE;YAC/C,cAAc,EAAE,KAAK;YACrB,gBAAgB,EAAE,IAAI;YACtB,mBAAmB,EAAE,IAAI;YACzB,8BAA8B,EAAE,IAAI;SACrC,CAAC,CAAC;QAEH,IAAI,OAAO,IAAI,gBAAM,CAAC,SAAS,CAAC,gBAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC;YACzE,IAAA,sBAAW,EAAC,GAAG,IAAI,CAAC,IAAI,sDAAsD,CAAC,CAAC;YAChF,OAAO;QACT,CAAC;QAED,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YACzB,WAAW,CAAC,OAAO,GAAG,EAAE,CAAC;QAC3B,CAAC;aAAM,CAAC;YACN,IAAI,aAAa,GAAG,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,+CAAwB,CAAC,CAAC,CAAC;YAChF,WAAW,CAAC,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,MAAM,CAAC,0BAA0B,CAAC,CAAC;YAC7E,IAAI,aAAa,EAAE,CAAC;gBAClB,sEAAsE;gBACtE,kEAAkE;gBAClE,IAAI,OAAO,IAAI,gBAAM,CAAC,SAAS,CAAC,gBAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC;oBACzE,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC,CAAC;gBAClF,CAAC;qBAAM,CAAC;oBACN,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC,CAAC;gBACnF,CAAC;YACH,CAAC;QACH,CAAC;QAED,IAAI,IAAI,CAAC,2BAA2B,EAAE,CAAC;YACrC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC;QAC7D,CAAC;IACH,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,gBAAgB;QAC1B,+DAA+D;QAC/D,mEAAmE;QACnE,uEAAuE;QACvE;YACE,KAAK;YACL,OAAO;YACP,cAAc;YACd,iBAAiB;YACjB,oBAAoB;YACpB,QAAQ;YACR,QAAQ;YACR,WAAW;YACX,cAAc;YACd,QAAQ;SACT,EACD,QAAQ,EACR,GAAG,EAAE,CAAC,IAAA,8BAAU,EAAC,IAAI,CAAC,OAAO,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CACpD,CAAC;IACJ,CAAC;IAED,4EAA4E;IAC5E,kCAAkC;IAClC,IAAc,WAAW;QACvB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QACzB,OAAO,IAAA,wBAAe,EACpB;YACE,OAAO,EAAE,CAAC;YACV,eAAe,EAAE,IAAI;YACrB,IAAI,EAAE,OAAO;SACd,EACD,KAAK,CAAC,UAAU,EAChB,GAAG,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CACnC,CAAC;IACJ,CAAC;IAGD,IAAc,OAAO;QACnB,IAAI,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;QAC7B,OAAO,KAAK,CAAC;IACf,CAAC;IAGS,gBAAgB,CACxB,WAA8B,EAC9B,QAAgB,EAChB,EAA0B;QAE1B,IAAI,QAA4B,CAAC;QACjC,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,eAAe,KAAK,UAAU,EAAE,CAAC;YAC7D,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YACrE,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,KAAyB,EAAE,IAAI,EAAE,EAAE;;gBAC1D,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC;oBAClB,iEAAiE;oBACjE,OAAO,SAAS,CAAC;gBACnB,CAAC;gBACD,IAAI,GAAG,GAAG,MAAA,MAAA,IAAI,CAAC,aAAa,EAAC,eAAe,mDAAG,IAAI,CAAC,CAAC;gBACrD,IAAI,GAAG,EAAE,CAAC;oBACR,OAAO,KAAK,GAAG,GAAG,CAAC;gBACrB,CAAC;qBAAM,CAAC;oBACN,OAAO,SAAS,CAAC;gBACnB,CAAC;YACH,CAAC,EAAE,EAAE,CAAC,CAAC;YACP,IAAI,QAAQ,EAAE,CAAC;gBACb,QAAQ,GAAG,QAAQ,GAAG,QAAQ,CAAC;gBAC/B,IAAI,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;gBACvD,IAAI,UAAU,EAAE,CAAC;oBACf,IAAA,YAAK,EAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;oBAC9D,OAAO,UAAU,CAAC;gBACpB,CAAC;YACH,CAAC;QACH,CAAC;QACD,IAAA,YAAK,EAAC,qBAAqB,EAAE,IAAI,CAAC,IAAI,EAAE,WAAW,EAAE,QAAQ,CAAC,CAAC;QAC/D,IAAI,IAAI,GAAG,EAAE,EAAE,CAAC;QAChB,IAAI,IAAI,IAAI,QAAQ,EAAE,CAAC;YACrB,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;QAC9C,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,wEAAwE;IACxE,+DAA+D;IAC/D,EAAE;IACF,6EAA6E;IAC7E,4EAA4E;IAC5E,iBAAiB;IACP,cAAc,CAAC,IAAY;;QACnC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE,CAAC;YAChC,OAAO,KAAK,CAAC;QACf,CAAC;QACD,kEAAkE;QAClE,MAAM,SAAS,GAAG,IAAA,wBAAY,EAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACnD,IAAI,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC;QAC1C,IAAI,CAAC;YACH,SAAS,CAAC,MAAM,GAAG,YAAY,CAAC;YAChC,IAAI,MAAM,GAAG,MAAA,IAAI,CAAC,UAAU,CAAC,OAAO,0CAAE,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;YACrE,IAAI,MAAM,KAAK,eAAe,EAAE,CAAC;gBAC/B,wEAAwE;gBACxE,6BAA6B;gBAC7B,OAAO,KAAK,CAAC;YACf,CAAC;YACD,IAAI,MAAM,IAAI,IAAI,EAAE,CAAC;gBACnB,mEAAmE;gBACnE,OAAO,IAAI,CAAC;YACd,CAAC;YACD,wEAAwE;YACxE,OAAO;YACP,IAAA,sBAAW,EAAC,GAAG,IAAI,CAAC,IAAI,kFAAkF,CAAC,CAAC;YAC5G,OAAO,KAAK,CAAC;QACf,CAAC;gBAAS,CAAC;YACT,IAAI,SAAS,CAAC,MAAM,KAAK,YAAY,EAAE,CAAC;gBACtC,SAAS,CAAC,MAAM,GAAG,SAAS,CAAC;YAC/B,CAAC;QACH,CAAC;IACH,CAAC;IAES,qBAAqB,CAC7B,IAAY,EACZ,EAAE,mBAAmB,EAAE,GAAG,EAAE,mBAAmB,EAAE,KAAK,EAAE;QAExD,oFAAoF;QACpF,OAAO,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE;YAClD,wEAAwE;YACxE,MAAM,SAAS,GAAG,IAAA,wBAAY,EAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YACnD,IAAI,QAAQ,CAAC;YACb,IAAI,CAAC;gBACH,IAAI,mBAAmB,EAAE,CAAC;oBACxB,QAAQ,GAAG,SAAS,CAAC,YAAY,CAAC;oBAClC,SAAS,CAAC,YAAY,GAAG,UAAU,IAAU;wBAC3C,OAAO,IAAI,CAAC;oBACd,CAAC,CAAC;gBACJ,CAAC;gBACD,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC;oBAC9B,OAAO,SAAS,CAAC;gBACnB,CAAC;gBACD,OAAO,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC3C,CAAC;oBAAS,CAAC;gBACT,IAAI,mBAAmB,EAAE,CAAC;oBACxB,SAAS,CAAC,YAAY,GAAG,QAAQ,CAAC;gBACpC,CAAC;YACH,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAES,YAAY,CAAC,KAAwB;QAC7C,kEAAkE;QAClE,0EAA0E;QAC1E,4EAA4E;QAC5E,2EAA2E;QAC3E,qEAAqE;QACrE,gDAAgD;QAChD,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACjF,IAAI,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;YAC9E,IAAI,IAAI,EAAE,CAAC;gBACT,IAAI,GAAG,IAAA,wBAAa,EAAC,IAAI,CAAC,CAAC;gBAE3B,qEAAqE;gBACrE,YAAY;gBACZ,IAAI,MAAM,GAAG,IAAA,4BAAgB,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;gBAChF,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;gBACvC,OAAO,MAAM,CAAC,IAAI,CAAC;YACrB,CAAC;QACH,CAAC;aAAM,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC;YACtC,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QACjD,CAAC;IACH,CAAC;IAES,eAAe;QACvB,IAAI,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,EAAE,CAAC;YAC1C,IAAI,MAAM,GAAG,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,CAAC;YACxD,IAAI,MAAM,EAAE,CAAC;gBACX,OAAO,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAClD,CAAC;QACH,CAAC;aAAM,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE,CAAC;YAC7C,OAAO,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC,CAAC;QAC1E,CAAC;IACH,CAAC;IAES,kBAAkB;QAC1B,IAAI,IAAI,CAAC,UAAU,CAAC,oBAAoB,CAAC,EAAE,CAAC;YAC1C,IAAA,eAAI,EAAC,GAAG,IAAI,CAAC,IAAI,uCAAuC,CAAC,CAAC;QAC5D,CAAC;aAAM,IAAI,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE,CAAC;YAC7C,uEAAuE;YACvE,wEAAwE;YACxE,0CAA0C;YAC1C,OAAO,IAAA,yBAAW,EAAC,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,EAAE;gBACjD,OAAO,EAAE,GAAG,iBAAiB,QAAQ;aACtC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAEO,iBAAiB,CAAC,KAAwB;QAChD,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,IAAI,EAAE,CAAC;YACV,OAAO;QACT,CAAC;QACD,IAAI,sBAAsB,GAAS,IAAI,6CAAgC,CAAC,IAAI,EAAE;YAC5E,YAAY,EAAE,CAAC,YAAY,CAAC;YAE5B,oEAAoE;YACpE,UAAU;YACV,kBAAkB,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;SACxC,CAAC,CAAC;QACH,IAAI,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;YACvC,IAAI,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;gBACpB,uEAAuE;gBACvE,yCAAyC;gBACzC,IAAI,eAAe,GAAG,KAAK,CAAC;gBAE5B,IAAI,GAAG,IAAI,sBAAW,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE;oBACvC,eAAe,GAAG,IAAA,qBAAU,EAAC,IAAA,cAAO,EAAC,SAAS,EAAE,WAAW,CAAC,CAAC,CAAC;gBAChE,CAAC,CAAC,CAAC;gBACH,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;oBAC5B,kBAAkB,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,EAAE;iBAC3D,CAAC,CAAC,CAAC;YACN,CAAC;QACH,CAAC;aAAM,CAAC;YACN,IAAI,SAAS,GAAa,EAAE,CAAC;YAC7B,IAAI,0BAA0B,GAAa,EAAE,CAAC;YAE9C,IAAI,GAAG,IAAI,sBAAW,CAAC,IAAI,EAAE,SAAS,CAAC,EAAE;gBACvC,SAAS,GAAG,IAAA,mBAAQ,EAAC,SAAS,EAAE,EAAE,KAAK,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC,EAAE,CAAC;qBAChE,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,CAAC;qBACxC,MAAM,CAAC,oBAAoB,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;YAEH,sBAAsB,GAAG,IAAI,sBAAW,CAAC,sBAAsB,EAAE,SAAS,CAAC,EAAE;gBAC3E,0BAA0B,GAAG,IAAA,mBAAQ,EAAC,SAAS,EAAE,EAAE,KAAK,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,GAAG,CAC1E,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,EAAE,CACpC,CAAC;YACJ,CAAC,CAAC,CAAC;YAEH,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;gBAC5B,kBAAkB,EAAE,SAAS,CAAC,MAAM,CAAC,0BAA0B,CAAC;aACjE,CAAC,CAAC,CAAC;QACN,CAAC;QACD,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACvB,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;IAC3C,CAAC;IAEO,gBAAgB,CAAC,KAAwB;QAC/C,IAAI,eAAe,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAC7C,IAAI,eAAe,EAAE,CAAC;YACpB,IAAI,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,CAAC;gBAC/B,uEAAuE;gBACvE,mEAAmE;gBACnE,EAAE;gBACF,sEAAsE;gBACtE,kEAAkE;gBAClE,iCAAiC;gBACjC,EAAE;gBACF,6FAA6F;gBAC7F,eAAe,GAAG,IAAA,yBAAW,EAAC,eAAe,EAAE;oBAC7C,MAAM,EAAE,GAAG,IAAI,CAAC,IAAI,sBAAsB;oBAC1C,OAAO,EAAE,GAAG;oBACZ,UAAU,EAAE,IAAI;iBACjB,CAAC,CAAC;YACL,CAAC;YAED,IAAI,eAAe,GAAa,EAAE,CAAC;YACnC,IAAI,IAAI,GAAG,IAAI,sBAAW,CAAC,eAAe,EAAE,UAAU,CAAC,EAAE;gBACvD,eAAe,GAAG,IAAA,mBAAQ,EAAC,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,UAAU,CAAC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC,CAAC;YACtF,CAAC,CAAC,CAAC;YACH,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE;gBAC1B,OAAO;oBACL,iBAAiB,EAAE,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;iBACtD,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IAEO,kBAAkB,CAAC,KAAwB;QACjD,IAAI,IAAI,CAAC;QACT,IAAI,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE,CAAC;YACrC,yEAAyE;YACzE,yCAAyC;YACzC,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;YAC5C,IAAI,IAAI,EAAE,CAAC;gBACT,IAAI,GAAG,IAAA,yBAAW,EAAC,IAAI,EAAE;oBACvB,OAAO,EAAE,cAAc;oBACvB,kBAAkB,CAAC,IAAI;wBACrB,OAAO,IAAI,CAAC,OAAO,CAAC,gBAAgB,EAAE,EAAE,CAAC,CAAC;oBAC5C,CAAC;iBACF,CAAC,CAAC;YACL,CAAC;QACH,CAAC;aAAM,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC;YACvC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAClC,CAAC;QACD,IAAI,IAAI,EAAE,CAAC;YACT,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC;IACH,CAAC;IAEO,qBAAqB,CAAC,KAAwB;QACpD,IAAI,oBAAoB,CAAC;QACzB,IAAI,IAAI,CAAC,UAAU,CAAC,yBAAyB,CAAC,EAAE,CAAC;YAC/C,IAAI,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,oBAAoB,EAAE,EAAE,mBAAmB,EAAE,IAAI,EAAE,CAAC,CAAC;YAC/F,IAAI,QAAQ,EAAE,CAAC;gBACb,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,IAAA,4BAAgB,EAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC/E,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;gBAC5C,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;QACH,CAAC;aAAM,IAAI,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,EAAE,CAAC;YACnD,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC,CAAC;QAC9E,CAAC;QACD,IAAI,oBAAoB,EAAE,CAAC;YACzB,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,2BAA2B,EAAE,CAAC;gBACnD,IAAI,SAAS,GAAa,EAAE,CAAC;gBAC7B,oBAAoB,GAAG,IAAI,sBAAW,CAAC,oBAAoB,EAAE,UAAU,CAAC,EAAE;oBACxE,SAAS,GAAG,IAAA,mBAAQ,EAAC,UAAU,EAAE,EAAE,KAAK,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;gBAC/G,CAAC,CAAC,CAAC;gBACH,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;oBAC5B,uBAAuB,EAAE,SAAS;iBACnC,CAAC,CAAC,CAAC;YACN,CAAC;YACD,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACzC,CAAC;IACH,CAAC;IAEO,qBAAqB,CAAC,KAAwB,EAAE,IAAU,EAAE,QAAgB,EAAE,GAAoB;QACxG,IAAI,KAA0B,CAAC;QAC/B,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE;YAC1B,IAAI,KAAK,EAAE,CAAC;gBACV,OAAO,EAAE,CAAC,GAAG,CAAC,EAAE,KAAK,EAAE,CAAC;YAC1B,CAAC;iBAAM,CAAC;gBACN,OAAO,EAAE,CAAC;YACZ,CAAC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,sBAAW,CAAC,IAAI,EAAE,CAAC,UAAkB,EAAE,EAAE;YAClD,IAAI,GAAG,GAAG,IAAA,WAAI,EAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YACrC,IAAI,IAAA,qBAAU,EAAC,GAAG,CAAC,EAAE,CAAC;gBACpB,KAAK,GAAG,IAAA,kBAAS,EAAC,IAAA,mBAAQ,EAAC,GAAG,EAAE,EAAE,KAAK,EAAE,CAAC,SAAS,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,EAAE,EAAE,KAAK,QAAQ,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAClH,CAAC;iBAAM,CAAC;gBACN,KAAK,GAAG,SAAS,CAAC;YACpB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEO,gBAAgB,CAAC,KAAwB;QAC/C,IAAI,IAAI,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;QACrC,IAAI,IAAI,EAAE,CAAC;YACT,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,IAAI,EAAE,iBAAiB,EAAE,QAAQ,CAAC,CAAC;YAC5E,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC;IACH,CAAC;IAEO,eAAe,CAAC,KAAwB;QAC9C,IAAI,OAAO,CAAC;QACZ,IAAI,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,kBAAkB,CAAC,EAAE,CAAC;YACtD,IAAI,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;YACjD,IAAI,QAAQ,EAAE,CAAC;gBACb,OAAO,GAAG,IAAA,yBAAW,EAAC,QAAQ,EAAE;oBAC9B,OAAO,EAAE,iBAAiB;iBAC3B,CAAC,CAAC;YACL,CAAC;QACH,CAAC;aAAM,IAAI,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC;YACpC,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAClC,CAAC;QAED,IAAI,OAAO,EAAE,CAAC;YACZ,uEAAuE;YACvE,6BAA6B;YAC7B,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,OAAO,EAAE,iBAAiB,EAAE,QAAQ,CAAC,CAAC;YAClF,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC;QAED,IACE,OAAO,IAAI,CAAC,aAAa,CAAC,iBAAiB,KAAK,UAAU;YAC1D,IAAI,CAAC,aAAa,CAAC,iBAAiB,EAAE;YACtC,IAAI,CAAC,aAAa,CAAC,cAAc,EAAE,EACnC,CAAC;YACD,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE,CAAC;YACpD,IAAI,QAAQ,EAAE,CAAC;gBACb,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CACnC,KAAK,EACL,IAAA,yBAAW,EAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,iBAAiB,EAAE,CAAC,EACrD,iBAAiB,EACjB,QAAQ,CACT,CAAC;gBACF,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC;IACH,CAAC;IAEO,oBAAoB,CAAC,KAAwB;QACnD,IAAI,IAAI,CAAC;QAET,IAAI,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,EAAE,CAAC;YACvC,sEAAsE;YACtE,4EAA4E;YAC5E,yEAAyE;YACzE,kEAAkE;YAClE,yEAAyE;YACzE,0EAA0E;YAC1E,wEAAwE;YACxE,sEAAsE;YACtE,2EAA2E;YAC3E,sDAAsD;YACtD,IAAI,IAAA,yBAAc,EAAC,IAAA,WAAI,EAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC;gBAChD,IAAI,GAAG,IAAA,yBAAW,EAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,CAAC,CAAC;YAC5D,CAAC;YACD,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;YAChD,IAAI,IAAI,EAAE,CAAC;gBACT,IAAI,GAAG,IAAA,yBAAW,EAAC,IAAI,EAAE,EAAE,OAAO,EAAE,sBAAsB,EAAE,CAAC,CAAC;YAChE,CAAC;QACH,CAAC;aAAM,CAAC;YACN,IAAI,IAAA,yBAAc,EAAC,IAAA,WAAI,EAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC;gBAChD,IAAI,GAAG,IAAA,yBAAW,EAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,sBAAsB,EAAE,CAAC,CAAC;YAC7F,CAAC;QACH,CAAC;QAED,IAAI,IAAI,EAAE,CAAC;YACT,uEAAuE;YACvE,6BAA6B;YAC7B,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,IAAI,EAAE,sBAAsB,EAAE,aAAa,CAAC,CAAC;YACtF,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC;IACH,CAAC;IAEO,eAAe,CAAC,KAAwB;QAC9C,IAAI,UAAU,CAAC;QACf,uEAAuE;QACvE,0EAA0E;QAC1E,aAAa;QACb,IAAI,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACzD,IAAI,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;YACpD,IAAI,QAAQ,EAAE,CAAC;gBACb,UAAU,GAAG,IAAA,yBAAW,EAAC,QAAQ,EAAE;oBACjC,OAAO,EAAE,QAAQ;iBAClB,CAAC,CAAC;YACL,CAAC;QACH,CAAC;aAAM,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC;YACvC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QACxC,CAAC;QACD,IAAI,UAAU,EAAE,CAAC;YACf,IAAI,YAAY,GAAmC,EAAE,CAAC;YACtD,UAAU,GAAG,IAAI,sBAAW,CAAC,UAAU,EAAE,CAAC,UAAkB,EAAE,EAAE;gBAC9D,YAAY,GAAG,EAAE,CAAC;gBAClB,KAAK,IAAI,QAAQ,IAAI,IAAA,mBAAQ,EAAC,IAAA,WAAI,EAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC;oBAC1D,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;wBAC5B,YAAY,CAAC,YAAY,QAAQ,EAAE,CAAC,GAAG,IAAI,GAAG,QAAQ,CAAC;oBACzD,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;YACH,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC7B,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE,eAAe,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;QACpE,CAAC;IACH,CAAC;IAEO,eAAe,CAAC,KAAwB;QAC9C,IAAI,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,EAAE,CAAC;YACrC,mEAAmE;YACnE,sEAAsE;YACtE,OAAO;YACP,IAAI,IAAI,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;YAChD,IAAI,IAAI,EAAE,CAAC;gBACT,KAAK,CAAC,KAAK,CAAC,IAAI,CACd,IAAA,yBAAW,EAAC,IAAI,EAAE;oBAChB,OAAO,EAAE,QAAQ;iBAClB,CAAC,CACH,CAAC;YACJ,CAAC;QACH,CAAC;aAAM,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,CAAC;YACvC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC7C,CAAC;IACH,CAAC;IAEO,QAAQ;QACd,OAAO,OAAO,IAAI,CAAC,aAAa,CAAC,uBAAuB,KAAK,UAAU,CAAC;IAC1E,CAAC;IAEO,iBAAiB,CAAC,KAAwB;;QAChD,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,CAAC;YACrB,OAAO;QACT,CAAC;QACD,sEAAsE;QACtE,yEAAyE;QACzE,4CAA4C;QAC5C,EAAE;QACF,2EAA2E;QAC3E,uEAAuE;QACvE,mBAAmB;QACnB,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAA,+BAAS,EAAC,iCAAiC,EAAE,MAAA,MAAA,IAAI,CAAC,aAAa,EAAC,uBAAuB,kDAAI,CAAC,CAAC,CAAC;QAC/G,KAAK,CAAC,KAAK,CAAC,IAAI,CACd,IAAA,+BAAS,EACP,uBAAuB,EACvB;;;;mBAIW,IAAI,CAAC,SAAS,CAAC,MAAA,MAAA,IAAI,CAAC,aAAa,EAAC,YAAY,mDAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;;;;;KAK1F,CACE,CACF,CAAC;IACJ,CAAC;IAEO,gBAAgB,CAAC,KAAwB;QAC/C,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,8BAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;IACrF,CAAC;IAGO,KAAK;QACX,IAAI,KAAK,GAAG,IAAI,iBAAiB,EAAE,CAAC;QACpC,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEhD,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,IAAI,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC;YACxG,KAAK,CAAC,UAAU,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC;QACzC,CAAC;QAED,IAAI,IAAI,CAAC,UAAU,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC;YAClC,KAAK,CAAC,UAAU,CAAC,kBAAkB,CAAC,GAAG;gBACrC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,IAAI,CAAC,IAAI;aAC7B,CAAC;QACJ,CAAC;QAED,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC;QAClC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC7B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;QAC5B,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;QAC9B,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAC7B,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AAr9BD,0BAq9BC;AAl7BC;IADC,IAAA,4BAAO,GAAE;0DAqBT;AAqJD;IADC,IAAA,4BAAO,GAAE;mCAMT;AAGD;IADC,IAAA,4BAAO,GAAE;yCAUT;AAsEO;IADP,IAAA,4BAAO,GAAE;2CAaT;AAmDD;IADC,IAAA,4BAAO,GAAE;uCAOT;AAGD;IADC,IAAA,4BAAO,GAAE;yCAMT;AA4BS;IADT,IAAA,4BAAO,GAAE;gDAkDT;AAwCD;IADC,IAAA,4BAAO,GAAE;sCAIT;AAkdO;IADP,IAAA,4BAAO,GAAE;oCA2BT;AAeH,MAAM,iBAAiB;IAAvB;QACE,UAAK,GAAW,EAAE,CAAC;QACnB,eAAU,GAAiC,EAAE,CAAC;QAC9C,gBAAW,GAAiC,EAAE,CAAC;IACjD,CAAC;CAAA;AAED,SAAS,0BAA0B,CAAC,MAAkB;IACpD,IAAI,IAAA,8BAAuB,EAAC,MAAM,CAAC,EAAE,CAAC;QACpC,oEAAoE;QACpE,sEAAsE;QACtE,8BAA8B;QAC9B,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,IAAA,+CAAwB,EAAC,MAAM,CAAC,EAAE,CAAC;QACrC,qEAAqE;QACrE,oEAAoE;QACpE,4DAA4D;QAC5D,aAAa;QACb,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,IAAA,+CAAwB,EAAC,MAAM,CAAC,EAAE,CAAC;QACrC,2EAA2E;QAC3E,gDAAgD;QAChD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,IAAA,yCAAkB,EAAC,MAAM,CAAC,EAAE,CAAC;QAC/B,0EAA0E;QAC1E,qEAAqE;QACrE,OAAO,KAAK,CAAC;IACf,CAAC;IAED,IAAI,IAAA,yCAAkB,EAAC,MAAM,CAAC,EAAE,CAAC;QAC/B,wEAAwE;QACxE,0EAA0E;QAC1E,OAAO;QACP,OAAO,KAAK,CAAC;IACf,CAAC;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAED,SAAS,oBAAoB,CAAC,IAAY;IACxC,OAAO,CAAC,2BAA2B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACjD,CAAC;AAED,MAAM,eAAe,GAAG,IAAI,8BAAY,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;AAExD,MAAM,YAAY,GAAG,GAAG,EAAE;IACxB,OAAO,eAAe,CAAC;AACzB,CAAC,CAAC;AAEF,YAAY,CAAC,OAAO,GAAG,GAAG,EAAE;IAC1B,OAAO,eAAe,CAAC;AACzB,CAAC,CAAC","sourcesContent":["import { Memoize } from 'typescript-memoize';\nimport { dirname, join, relative, resolve } from 'path';\nimport { sync as pkgUpSync } from 'pkg-up';\nimport { existsSync, pathExistsSync } from 'fs-extra';\nimport type { Options as FunnelOptions } from 'broccoli-funnel';\nimport buildFunnel from 'broccoli-funnel';\nimport { UnwatchedDir, WatchedDir } from 'broccoli-source';\nimport RewritePackageJSON from './rewrite-package-json';\nimport { todo, unsupported } from '@embroider/core/src/messages';\nimport type { Node } from 'broccoli-node-api';\nimport mergeTrees from 'broccoli-merge-trees';\nimport semver from 'semver';\nimport rewriteAddonTree from './rewrite-addon-tree';\nimport { mergeWithAppend } from './merges';\nimport type { AddonMeta, PackageCache, AddonInstance, AddonTreePath } from '@embroider/core';\nimport { debug, findTopmostAddon } from '@embroider/core';\nimport type Options from './options';\nimport walkSync from 'walk-sync';\nimport ObserveTree from './observe-tree';\nimport { isEmbroiderMacrosPlugin } from '@embroider/macros/src/node';\nimport type { TransformOptions, PluginItem } from '@babel/core';\nimport modulesCompat from './modules-compat';\nimport writeFile from 'broccoli-file-creator';\nimport SynthesizeTemplateOnlyComponents from './synthesize-template-only-components';\nimport {\n  isEmberAutoImportDynamic,\n  isCompactReexports,\n  isColocationPlugin,\n  isInlinePrecompilePlugin,\n} from './detect-babel-plugins';\nimport HbsToJSBroccoliPlugin from './hbs-to-js-broccoli-plugin';\nimport { fromPairs } from 'lodash';\nimport loadAstPlugins from './prepare-htmlbars-ast-plugins';\nimport getRealAddon from './get-real-addon';\nimport type { Options as EtcOptions } from 'babel-plugin-ember-template-compilation';\nimport type CompatApp from './compat-app';\n\nconst stockTreeNames: AddonTreePath[] = Object.freeze([\n  'addon',\n  'addon-styles',\n  'styles',\n  'addon-test-support',\n  'test-support',\n  'app',\n  'public',\n  'vendor',\n  // 'addon-templates' and 'templates are trees too, but they live inside\n  // 'addon' and 'app' and we handle them there.\n]) as AddonTreePath[];\n\nconst dynamicTreeHooks = Object.freeze([\n  'treeFor',\n  'treeForAddon',\n  'treeForAddonTemplates',\n  'treeForAddonTestSupport',\n  'treeForApp',\n  'treeForPublic',\n  'treeForStyles',\n  'treeForTemplates',\n  'treeForTestSupport',\n  'treeForVendor',\n]);\n\nconst defaultMethods = {\n  app: 'treeForApp',\n  addon: 'treeForAddon',\n  'addon-styles': 'treeForAddonStyles',\n  'addon-templates': 'treeForAddonTemplates',\n  'addon-test-support': 'treeForAddonTestSupport',\n  public: 'treeForPublic',\n  styles: 'treeForStyles',\n  templates: 'treeForTemplates',\n  'test-support': 'treeForTestSupport',\n  vendor: 'treeForVendor',\n};\n\nconst appPublicationDir = '_app_';\nconst fastbootPublicationDir = '_fastboot_';\n\n// This controls and types the interface between our new world and the classic\n// v1 addon instance.\nexport default class V1Addon {\n  constructor(\n    protected addonInstance: AddonInstance,\n    protected addonOptions: Required<Options>,\n    protected app: CompatApp,\n    private packageCache: PackageCache,\n    private orderIdx: number\n  ) {\n    if (addonInstance.registry) {\n      this.updateRegistry(addonInstance.registry);\n    }\n  }\n\n  // Optional extensible hook for pruning down the list of redundant addon\n  // instances produced by the classic ember-cli architecture. ember-cli\n  // instantiates each addon *per consumer*, not per package. So a given package\n  // will have many addon instances, and Embroider dutifully produces a V1Addon\n  // instance for each one, and then needs to mimic the classic smooshing\n  // behavior between them.\n  //\n  // But some packages (and ember-cli-babel is the motivating example) produce a\n  // huge number of instances that do nothing useful and incur significant cost.\n  // This hook allows their compat adapter to prune down the set, using\n  // addon-specific knowledge of which instance(s) are actually important.\n  //\n  // The order of the instances is significant. The first one is the one with\n  // the highest precedence, meaning its files would win under classic\n  // smooshing.\n  reduceInstances(instances: V1Addon[]): V1Addon[] {\n    // the default beahvior is that all copies matter\n    return instances;\n  }\n\n  // this is only defined when there are custom AST transforms that need it\n  @Memoize()\n  private get templateCompilerBabelPlugin(): PluginItem | undefined {\n    let plugins = loadAstPlugins(this.addonInstance.registry);\n    // our macros don't run here in stage1\n    plugins = plugins.filter((p: any) => !isEmbroiderMacrosPlugin(p));\n    if (plugins.length > 0) {\n      let compilerPath = require.resolve('ember-source/dist/ember-template-compiler.js', {\n        paths: [findTopmostAddon(this.addonInstance).parent.root],\n      });\n      let opts: EtcOptions = {\n        compilerPath,\n        targetFormat: 'hbs',\n        enableLegacyModules: [\n          'ember-cli-htmlbars',\n          'ember-cli-htmlbars-inline-precompile',\n          'htmlbars-inline-precompile',\n        ],\n        transforms: plugins,\n      };\n      return [require.resolve('babel-plugin-ember-template-compilation'), opts];\n    }\n  }\n\n  private updateRegistry(registry: any) {\n    // auto-import gets disabled because we support it natively\n    registry.remove('js', 'ember-auto-import-analyzer');\n\n    // here we're replacing the stock template compiler with our own. Ours\n    // doesn't compile all the way to wire format -- it does source-to-source\n    // transformation just to process custom AST transforms, while leaving the\n    // template as a template. It does turn HBS files into equivalent JS files\n    // (because in the general case, AST transforms may need to emit values in\n    // Javascript scope), but those JS files will contain HBS strings, not wire\n    // format.\n    //\n    // Even when no AST transforms are registered, we'll still need to register\n    // a no-op transform here to avoid an exception coming out of ember-cli like\n    // \"Addon templates were detected, but there are no template compilers\n    // registered\".\n    registry.remove('template', 'ember-cli-htmlbars');\n    registry.add('template', {\n      name: 'embroider-addon-templates',\n      ext: 'hbs',\n      _addon: this,\n      toTree(this: { _addon: V1Addon }, tree: Node): Node {\n        if (this._addon.templateCompilerBabelPlugin) {\n          return new HbsToJSBroccoliPlugin(tree);\n        } else {\n          // when there are no custom AST transforms, we don't need to do\n          // anything at all.\n          return tree;\n        }\n      },\n    });\n\n    // first, look into the babel config and related packages to decide whether\n    // we need to run babel at all in this stage.\n    let needsCustomBabel = this.needsCustomBabel();\n\n    // regardless of the answer, we modify the babel config, because even if\n    // we're unregistering ember-cli-babel, some addons manually invoke\n    // ember-cli-babel in their custom hooks, and in that case we want to be\n    // sure we've taken out the babel plugins that really shouldn't run at this\n    // stage.\n    this.updateBabelConfig();\n\n    if (!needsCustomBabel) {\n      // no custom babel behavior, so we don't run the ember-cli-babel\n      // preprocessor at all. We still need to register a no-op preprocessor to\n      // prevent ember-cli from emitting a deprecation warning.\n      registry.remove('js', 'ember-cli-babel');\n      registry.add('js', {\n        name: 'embroider-babel-noop',\n        ext: 'js',\n        toTree(tree: Node) {\n          return tree;\n        },\n      });\n    }\n  }\n\n  // we need to run custom inline hbs preprocessing if there are custom hbs\n  // plugins and there are inline hbs templates\n  private needsInlineHBS(): boolean {\n    if (!this.templateCompilerBabelPlugin) {\n      // no custom transforms\n      return false;\n    }\n    if (this.addonInstance.addons.find((a: any) => a.name === 'ember-cli-htmlbars-inline-precompile')) {\n      // the older inline template compiler is present\n      return true;\n    }\n\n    if (\n      this.addonInstance.addons.find(\n        (a: any) =>\n          a.name === 'ember-cli-htmlbars' && semver.satisfies(semver.coerce(a.pkg.version) || a.pkg.version, '>4.0.0')\n      )\n    ) {\n      // a version of ember-cli-htmlbars that natively supports inline hbs is present\n      return true;\n    }\n\n    return false;\n  }\n\n  private needsCustomBabel() {\n    if (\n      this.addonInstance.addons.find(\n        (a: any) =>\n          a.name === 'ember-cli-typescript' &&\n          semver.satisfies(semver.coerce(a.pkg.version) || a.pkg.version, '>=4.0.0-alpha.1')\n      )\n    ) {\n      // This addon is using ember-cli-typescript 4, which relies on\n      // ember-cli-babel to add the TypeScript transform Babel plugin.\n      return true;\n    }\n\n    if (\n      this.addonInstance.options &&\n      this.addonInstance.options['ember-cli-babel'] &&\n      this.addonInstance.options['ember-cli-babel'].enableTypeScriptTransform\n    ) {\n      // This addon has explicitly configured ember-cli-babel to add the\n      // TypeScript transform Babel plugin.\n      return true;\n    }\n\n    if ((this.options.babel?.plugins?.filter(babelPluginAllowedInStage1)?.length ?? 0) > 0) {\n      // this addon has custom babel plugins, so we need to run them here in\n      // stage1\n      return true;\n    }\n\n    // even if there are no custom babel plugins, if we need to do any\n    // preprocessing of inline handlebars templates we still need to run the\n    // custom babel.\n    return this.needsInlineHBS();\n  }\n\n  get name(): string {\n    return this.packageJSON.name;\n  }\n\n  // you can override this to change the *input* packageJSON that the rest of\n  // stage1 will see. If you want to see and change the *output* packageJSON see\n  // `newPackageJSON`.\n  protected get packageJSON() {\n    return this.packageCache.get(this.root).packageJSON;\n  }\n\n  protected get newPackageJSON() {\n    // shallow copy only! This is OK as long as we're only changing top-level\n    // keys in this method\n    let pkg = Object.assign({}, this.packageJSON);\n    let meta: AddonMeta = Object.assign({}, this.packageCache.get(this.root).meta, this.packageMeta);\n    pkg['ember-addon'] = meta;\n\n    // classic addons don't get to customize their entrypoints like this. We\n    // always rewrite them so their entrypoint is index.js, so whatever was here\n    // is just misleading to stage3 packagers that might look (rollup does).\n    delete pkg.main;\n    delete pkg.module;\n    delete pkg.exports;\n\n    return pkg;\n  }\n\n  @Memoize()\n  get root(): string {\n    // addonInstance.root gets modified by a customized \"main\" or\n    // \"ember-addon.main\" in package.json. We want the real package root here\n    // (the place where package.json lives).\n    return dirname(pkgUpSync({ cwd: this.addonInstance.root })!);\n  }\n\n  @Memoize()\n  private get mainModule() {\n    // eslint-disable-next-line @typescript-eslint/no-require-imports\n    const mod = require((this.addonInstance as unknown as any).constructor._meta_.modulePath);\n\n    if (typeof mod === 'function') {\n      return mod.prototype;\n    } else {\n      return mod;\n    }\n  }\n\n  protected get options() {\n    if (!this.addonInstance.options) {\n      this.addonInstance.options = {};\n      return this.addonInstance.options;\n    }\n    // some addons (like ember-cli-inline-content) assign the *app's* options\n    // onto their own this.options. Which means they (accidentally or on\n    // purpose), always get the app's babel config, and it means when we try\n    // to modify the addon's babel config we're accidentally modifying the\n    // app's too.\n    //\n    // So here we do copying to ensure that we can modify the babel config\n    // without altering anybody else. We're not doing cloneDeep because that\n    // pulls on our lazy MacrosConfig if it appears in any babel configs here,\n    // whereas we want to leave it unevaluated until babel actually uses it.\n    let addonOptions =\n      typeof this.addonInstance.options == 'function' ? this.addonInstance.options() : this.addonInstance.options;\n    let options = Object.assign({}, addonOptions);\n    if (options.babel) {\n      options.babel = Object.assign({}, options.babel);\n      if (options.babel.plugins) {\n        options.babel.plugins = options.babel.plugins.slice();\n      }\n    }\n    if (options['ember-cli-babel']) {\n      options['ember-cli-babel'] = Object.assign({}, options['ember-cli-babel']);\n    }\n\n    if (typeof this.addonInstance.options == 'function') {\n      this.addonInstance.options = () => options;\n    } else {\n      this.addonInstance.options = options;\n    }\n\n    return options;\n  }\n\n  protected customizes(...treeNames: string[]) {\n    // get the real addon as we're going to compare with __proto__\n    const realAddon = getRealAddon(this.addonInstance);\n    return Boolean(\n      treeNames.find(treeName => {\n        return (\n          // customized hook exists in actual code exported from their index.js\n          this.mainModule[treeName] ||\n          // addon instance doesn't match its own prototype\n          (realAddon.__proto__ && realAddon[treeName] !== realAddon.__proto__[treeName]) ||\n          this.customizesHookName(treeName)\n        );\n      })\n    );\n  }\n\n  private customizesHookName(treeName: string): boolean {\n    if (!this.addonInstance.treeForMethods) {\n      // weird old addons don't even extend ember-cli's Addon base class and\n      // might not have this.\n      return false;\n    }\n    for (let [name, methodName] of Object.entries(defaultMethods)) {\n      if (methodName === treeName) {\n        return this.addonInstance.treeForMethods[name] !== methodName;\n      }\n    }\n    return false;\n  }\n\n  @Memoize()\n  private hasStockTree(treeName: AddonTreePath): boolean {\n    if (this.suppressesTree(treeName)) {\n      return false;\n    }\n\n    // we need to use this.addonInstance.root instead of this.root here because\n    // we're looking for the classic location of the stock tree, and that\n    // location is influenced by a customized ember-addon.main in package.json,\n    // which is reflected in addonInstance.root.\n    return (\n      this.addonInstance.treePaths && existsSync(join(this.addonInstance.root, this.addonInstance.treePaths[treeName]))\n    );\n  }\n\n  hasAnyTrees(): boolean {\n    return Boolean(stockTreeNames.find(name => this.hasStockTree(name))) || this.customizes(...dynamicTreeHooks);\n  }\n\n  // we keep all these here to ensure that we always apply the same options to\n  // the same tree, so that our cache doesn't need to worry about varying\n  // options.\n  private stockTreeFunnelOptions(treeName: string): FunnelOptions | undefined {\n    switch (treeName) {\n      case 'addon':\n        return {\n          exclude: ['styles/**'],\n        };\n      case 'styles':\n        return {\n          destDir: '_app_styles_',\n        };\n      case 'addon-test-support':\n        return {\n          destDir: 'test-support',\n        };\n      case 'app':\n        return {\n          exclude: ['styles/**'],\n          destDir: appPublicationDir,\n        };\n      case 'public':\n        return {\n          destDir: `public/${this.moduleName}`,\n        };\n      case 'vendor':\n        return {\n          destDir: 'vendor',\n        };\n    }\n  }\n\n  protected stockTree(treeName: AddonTreePath): Node {\n    return this.throughTreeCache(treeName, 'stock', () => {\n      // adjust from the legacy \"root\" to our real root, because our rootTree\n      // uses our real root but the stock trees are defined in terms of the\n      // legacy root\n      let srcDir = relative(this.root, join(this.addonInstance.root, this.addonInstance.treePaths[treeName]));\n      let opts = Object.assign({ srcDir }, this.stockTreeFunnelOptions(treeName));\n      return buildFunnel(this.rootTree, opts);\n    })!;\n  }\n\n  @Memoize()\n  protected get rootTree(): Node {\n    if (this.packageCache.get(this.root).mayRebuild) {\n      return new WatchedDir(this.root);\n    } else {\n      return new UnwatchedDir(this.root);\n    }\n  }\n\n  @Memoize()\n  private get moduleName(): string {\n    if (typeof this.addonInstance.moduleName === 'function') {\n      return this.addonInstance.moduleName();\n    }\n    return this.addonInstance.name;\n  }\n\n  // applies preprocessors to JS and HBS\n  private transpile(tree: Node) {\n    // Namespace the tree being passed to preprocessJs with the moduleName\n    // to mimic classic build\n    tree = buildFunnel(tree, { destDir: this.moduleName });\n\n    if (this.addonInstance.shouldCompileTemplates() && this.addonInstance.registry.load('template')?.length > 0) {\n      tree = this.app.preprocessRegistry.preprocessTemplates(tree, {\n        registry: this.addonInstance.registry,\n      });\n    }\n\n    tree = this.addonInstance.preprocessJs(tree, '/', this.moduleName, {\n      registry: this.addonInstance.registry,\n    });\n\n    // Remove namespacing so that it gets written out to the node_modules\n    // directory correctly.\n    tree = buildFunnel(tree, {\n      srcDir: this.moduleName,\n    });\n\n    return tree;\n  }\n\n  @Memoize()\n  protected updateBabelConfig() {\n    let packageOptions = this.options;\n    let emberCLIBabelInstance = this.addonInstance.addons.find((a: any) => a.name === 'ember-cli-babel');\n    let version;\n\n    if (emberCLIBabelInstance) {\n      version = emberCLIBabelInstance.pkg.version;\n    }\n\n    if (!packageOptions['ember-cli-babel']) {\n      packageOptions['ember-cli-babel'] = {};\n    }\n\n    if (!packageOptions.babel) {\n      packageOptions.babel = {};\n    }\n    let babelConfig = packageOptions.babel as TransformOptions;\n\n    Object.assign(packageOptions['ember-cli-babel'], {\n      compileModules: false,\n      disablePresetEnv: true,\n      disableDebugTooling: true,\n      disableEmberModulesAPIPolyfill: true,\n    });\n\n    if (version && semver.satisfies(semver.coerce(version) || version, '^5')) {\n      unsupported(`${this.name} is using babel 5. Not installing our custom plugin.`);\n      return;\n    }\n\n    if (!babelConfig.plugins) {\n      babelConfig.plugins = [];\n    } else {\n      let hadAutoImport = Boolean(babelConfig.plugins.find(isEmberAutoImportDynamic));\n      babelConfig.plugins = babelConfig.plugins.filter(babelPluginAllowedInStage1);\n      if (hadAutoImport) {\n        // if we removed ember-auto-import's dynamic import() plugin, the code\n        // may use import() syntax and we need to re-add it to the parser.\n        if (version && semver.satisfies(semver.coerce(version) || version, '^6')) {\n          babelConfig.plugins.push(require.resolve('babel-plugin-syntax-dynamic-import'));\n        } else {\n          babelConfig.plugins.push(require.resolve('@babel/plugin-syntax-dynamic-import'));\n        }\n      }\n    }\n\n    if (this.templateCompilerBabelPlugin) {\n      babelConfig.plugins.push(this.templateCompilerBabelPlugin);\n    }\n  }\n\n  get v2Tree(): Node {\n    return this.throughTreeCache(\n      // these are all the kinds of trees that ember-cli's tree cache\n      // understands. We need them all here because if *any* of these are\n      // uncacheable, we want our whole v2 tree to be treated as uncacheable.\n      [\n        'app',\n        'addon',\n        'addon-styles',\n        'addon-templates',\n        'addon-test-support',\n        'public',\n        'styles',\n        'templates',\n        'test-support',\n        'vendor',\n      ],\n      'v2Tree',\n      () => mergeTrees(this.v2Trees, { overwrite: true })\n    );\n  }\n\n  // this is split out so that compatibility shims can override it to add more\n  // things to the package metadata.\n  protected get packageMeta(): Partial<AddonMeta> {\n    let built = this.build();\n    return mergeWithAppend(\n      {\n        version: 2,\n        'auto-upgraded': true,\n        type: 'addon',\n      },\n      built.staticMeta,\n      ...built.dynamicMeta.map(d => d())\n    );\n  }\n\n  @Memoize()\n  protected get v2Trees() {\n    let { trees } = this.build();\n    return trees;\n  }\n\n  protected throughTreeCache(nameOrNames: string | string[], category: string, fn: () => Node): Node;\n  protected throughTreeCache(\n    nameOrNames: string | string[],\n    category: string,\n    fn: () => Node | undefined\n  ): Node | undefined {\n    let cacheKey: string | undefined;\n    if (typeof this.addonInstance.cacheKeyForTree === 'function') {\n      let names = Array.isArray(nameOrNames) ? nameOrNames : [nameOrNames];\n      cacheKey = names.reduce((accum: string | undefined, name) => {\n        if (accum == null) {\n          // a previous name was uncacheable, so we're entirely uncacheable\n          return undefined;\n        }\n        let key = this.addonInstance.cacheKeyForTree?.(name);\n        if (key) {\n          return accum + key;\n        } else {\n          return undefined;\n        }\n      }, '');\n      if (cacheKey) {\n        cacheKey = cacheKey + category;\n        let cachedTree = this.app.addonTreeCache.get(cacheKey);\n        if (cachedTree) {\n          debug('cache hit %s %s %s', this.name, nameOrNames, category);\n          return cachedTree;\n        }\n      }\n    }\n    debug('cache miss %s %s %s', this.name, nameOrNames, category);\n    let tree = fn();\n    if (tree && cacheKey) {\n      this.app.addonTreeCache.set(cacheKey, tree);\n    }\n    return tree;\n  }\n\n  // In general, we can't reliably run addons' custom `treeFor()` methods,\n  // because they recurse in a way that we absolutely don't want.\n  //\n  // But there is a very common use case that we *can* handle opportunisticaly,\n  // which is a treeFor() that's used purely to guard whether `_super` will be\n  // called or not.\n  protected suppressesTree(name: string): boolean {\n    if (!this.customizes('treeFor')) {\n      return false;\n    }\n    // get the real addon as we're going to patch and restore `_super`\n    const realAddon = getRealAddon(this.addonInstance);\n    let origSuper = this.addonInstance._super;\n    try {\n      realAddon._super = stubbedSuper;\n      let result = this.mainModule.treeFor?.call(this.addonInstance, name);\n      if (result === markedEmptyTree) {\n        // the method returns _super unchanged, so tree is not suppressed and we\n        // understand what's going on\n        return false;\n      }\n      if (result == null) {\n        // the method nulled out the tree, so we are definitely suppressing\n        return true;\n      }\n      // we can't tell what's really going on, don't suppress and hope for the\n      // best\n      unsupported(`${this.name} has a custom treeFor() method that is doing some arbitrary broccoli processing.`);\n      return false;\n    } finally {\n      if (realAddon._super === stubbedSuper) {\n        realAddon._super = origSuper;\n      }\n    }\n  }\n\n  protected invokeOriginalTreeFor(\n    name: string,\n    { neuterPreprocessors } = { neuterPreprocessors: false }\n  ): Node | undefined {\n    // @ts-expect-error have no idea why throughTreeCache overload is not working here..\n    return this.throughTreeCache(name, 'original', () => {\n      // get the real addon as we're going to patch and restore `preprocessJs`\n      const realAddon = getRealAddon(this.addonInstance);\n      let original;\n      try {\n        if (neuterPreprocessors) {\n          original = realAddon.preprocessJs;\n          realAddon.preprocessJs = function (tree: Node) {\n            return tree;\n          };\n        }\n        if (this.suppressesTree(name)) {\n          return undefined;\n        }\n        return this.addonInstance._treeFor(name);\n      } finally {\n        if (neuterPreprocessors) {\n          realAddon.preprocessJs = original;\n        }\n      }\n    });\n  }\n\n  protected treeForAddon(built: IntermediateBuild): Node | undefined {\n    // the extra isEngine condition is because ember-engines injects a\n    // treeForAddon method into each engine addon that we really don't need or\n    // want to run. Unfortunately there's not a more localized place to patch it\n    // out, partly because ember-engines also uses a bogus inheritance strategy\n    // (instead of providing a prototype that engine addons can extend it\n    // patches things into their instance directly).\n    if (this.customizes('treeForAddon', 'treeForAddonTemplates') && !this.isEngine()) {\n      let tree = this.invokeOriginalTreeFor('addon', { neuterPreprocessors: true });\n      if (tree) {\n        tree = modulesCompat(tree);\n\n        // this captures addons that are trying to escape their own package's\n        // namespace\n        let result = rewriteAddonTree(this.transpile(tree), this.name, this.moduleName);\n        built.dynamicMeta.push(result.getMeta);\n        return result.tree;\n      }\n    } else if (this.hasStockTree('addon')) {\n      return this.transpile(this.stockTree('addon'));\n    }\n  }\n\n  protected addonStylesTree(): Node | undefined {\n    if (this.customizes('treeForAddonStyles')) {\n      let custom = this.invokeOriginalTreeFor('addon-styles');\n      if (custom) {\n        return this.addonInstance.compileStyles(custom);\n      }\n    } else if (this.hasStockTree('addon-styles')) {\n      return this.addonInstance.compileStyles(this.stockTree('addon-styles'));\n    }\n  }\n\n  protected treeForTestSupport(): Node | undefined {\n    if (this.customizes('treeForTestSupport')) {\n      todo(`${this.name} has customized the test support tree`);\n    } else if (this.hasStockTree('test-support')) {\n      // this one doesn't go through transpile yet because it gets handled as\n      // part of the consuming app. For example, imports should be relative to\n      // the consuming app, not our own package.\n      return buildFunnel(this.stockTree('test-support'), {\n        destDir: `${appPublicationDir}/tests`,\n      });\n    }\n  }\n\n  private buildTreeForAddon(built: IntermediateBuild) {\n    let tree = this.treeForAddon(built);\n    if (!tree) {\n      return;\n    }\n    let templateOnlyComponents: Node = new SynthesizeTemplateOnlyComponents(tree, {\n      allowedPaths: ['components'],\n\n      // if an addon has custom AST transforms, stage1 can rewrite .hbs to\n      // .hbs.js\n      templateExtensions: ['.hbs', '.hbs.js'],\n    });\n    if (this.addonOptions.staticAddonTrees) {\n      if (this.isEngine()) {\n        // even when staticAddonTrees is enabled, engines may have a router map\n        // that needs to be dynamically resolved.\n        let hasRoutesModule = false;\n\n        tree = new ObserveTree(tree, outputDir => {\n          hasRoutesModule = existsSync(resolve(outputDir, 'routes.js'));\n        });\n        built.dynamicMeta.push(() => ({\n          'implicit-modules': hasRoutesModule ? ['./routes.js'] : [],\n        }));\n      }\n    } else {\n      let filenames: string[] = [];\n      let templateOnlyComponentNames: string[] = [];\n\n      tree = new ObserveTree(tree, outputDir => {\n        filenames = walkSync(outputDir, { globs: ['**/*.js', '**/*.hbs'] })\n          .map(f => `./${f.replace(/\\.js$/i, '')}`)\n          .filter(notColocatedTemplate);\n      });\n\n      templateOnlyComponents = new ObserveTree(templateOnlyComponents, outputDir => {\n        templateOnlyComponentNames = walkSync(outputDir, { globs: ['**/*.js'] }).map(\n          f => `./${f.replace(/\\.js$/i, '')}`\n        );\n      });\n\n      built.dynamicMeta.push(() => ({\n        'implicit-modules': filenames.concat(templateOnlyComponentNames),\n      }));\n    }\n    built.trees.push(tree);\n    built.trees.push(templateOnlyComponents);\n  }\n\n  private buildAddonStyles(built: IntermediateBuild) {\n    let addonStylesTree = this.addonStylesTree();\n    if (addonStylesTree) {\n      if (this.app.hasCompiledStyles) {\n        // >= ember-cli@3.18 store css files in <addon-name/__COMPILED_STYLES__\n        // and for embroider to work correctly need to be moved back to `/`\n        //\n        // speaking with @rwjblue the ember-cli build is now frozen, and it is\n        // ok to assume that after the above version no changes will occur\n        // makings this work-around safe.\n        //\n        // additional context: https://github.com/embroider-build/embroider/pull/934/files#r695269976\n        addonStylesTree = buildFunnel(addonStylesTree, {\n          srcDir: `${this.name}/__COMPILED_STYLES__`,\n          destDir: '/',\n          allowEmpty: true,\n        });\n      }\n\n      let discoveredFiles: string[] = [];\n      let tree = new ObserveTree(addonStylesTree, outputPath => {\n        discoveredFiles = walkSync(outputPath, { globs: ['**/*.css'], directories: false });\n      });\n      built.trees.push(tree);\n      built.dynamicMeta.push(() => {\n        return {\n          'implicit-styles': discoveredFiles.map(f => `./${f}`),\n        };\n      });\n    }\n  }\n\n  private buildTreeForStyles(built: IntermediateBuild) {\n    let tree;\n    if (this.customizes('treeForStyles')) {\n      // the user's tree returns their own styles with no \"app/styles\" wrapping\n      // around, which is actually what we want\n      tree = this.invokeOriginalTreeFor('styles');\n      if (tree) {\n        tree = buildFunnel(tree, {\n          destDir: '_app_styles_',\n          getDestinationPath(path) {\n            return path.replace(/^app\\/styles\\//, '');\n          },\n        });\n      }\n    } else if (this.hasStockTree('styles')) {\n      tree = this.stockTree('styles');\n    }\n    if (tree) {\n      built.trees.push(tree);\n    }\n  }\n\n  private buildAddonTestSupport(built: IntermediateBuild) {\n    let addonTestSupportTree;\n    if (this.customizes('treeForAddonTestSupport')) {\n      let original = this.invokeOriginalTreeFor('addon-test-support', { neuterPreprocessors: true });\n      if (original) {\n        let { tree, getMeta } = rewriteAddonTree(original, this.name, this.moduleName);\n        addonTestSupportTree = this.transpile(tree);\n        built.dynamicMeta.push(getMeta);\n      }\n    } else if (this.hasStockTree('addon-test-support')) {\n      addonTestSupportTree = this.transpile(this.stockTree('addon-test-support'));\n    }\n    if (addonTestSupportTree) {\n      if (!this.addonOptions.staticAddonTestSupportTrees) {\n        let filenames: string[] = [];\n        addonTestSupportTree = new ObserveTree(addonTestSupportTree, outputPath => {\n          filenames = walkSync(outputPath, { globs: ['**/*.js', '**/*.hbs'] }).map(f => `./${f.replace(/.js$/i, '')}`);\n        });\n        built.dynamicMeta.push(() => ({\n          'implicit-test-modules': filenames,\n        }));\n      }\n      built.trees.push(addonTestSupportTree);\n    }\n  }\n\n  private maybeSetDirectoryMeta(built: IntermediateBuild, tree: Node, localDir: string, key: keyof AddonMeta): Node {\n    let files: AddonMeta['app-js'];\n    built.dynamicMeta.push(() => {\n      if (files) {\n        return { [key]: files };\n      } else {\n        return {};\n      }\n    });\n    return new ObserveTree(tree, (outputPath: string) => {\n      let dir = join(outputPath, localDir);\n      if (existsSync(dir)) {\n        files = fromPairs(walkSync(dir, { globs: ['**/*.js', '**/*.hbs'] }).map(f => [`./${f}`, `./${localDir}/${f}`]));\n      } else {\n        files = undefined;\n      }\n    });\n  }\n\n  private buildTestSupport(built: IntermediateBuild) {\n    let tree = this.treeForTestSupport();\n    if (tree) {\n      tree = this.maybeSetDirectoryMeta(built, tree, appPublicationDir, 'app-js');\n      built.trees.push(tree);\n    }\n  }\n\n  private buildTreeForApp(built: IntermediateBuild) {\n    let appTree;\n    if (this.customizes('treeForApp', 'treeForTemplates')) {\n      let original = this.invokeOriginalTreeFor('app');\n      if (original) {\n        appTree = buildFunnel(original, {\n          destDir: appPublicationDir,\n        });\n      }\n    } else if (this.hasStockTree('app')) {\n      appTree = this.stockTree('app');\n    }\n\n    if (appTree) {\n      // this one doesn't go through transpile yet because it gets handled as\n      // part of the consuming app.\n      appTree = this.maybeSetDirectoryMeta(built, appTree, appPublicationDir, 'app-js');\n      built.trees.push(appTree);\n    }\n\n    if (\n      typeof this.addonInstance.isDevelopingAddon === 'function' &&\n      this.addonInstance.isDevelopingAddon() &&\n      this.addonInstance.hintingEnabled()\n    ) {\n      let hintTree = this.addonInstance.jshintAddonTree();\n      if (hintTree) {\n        hintTree = this.maybeSetDirectoryMeta(\n          built,\n          buildFunnel(hintTree, { destDir: appPublicationDir }),\n          appPublicationDir,\n          'app-js'\n        );\n        built.trees.push(hintTree);\n      }\n    }\n  }\n\n  private buildTreeForFastBoot(built: IntermediateBuild) {\n    let tree;\n\n    if (this.customizes('treeForFastBoot')) {\n      // Arguably, it would be more correct to always create the new Funnel,\n      // because the fastboot directory could be created *after* our build starts.\n      // But that would result in hundreds of additional trees, even though the\n      // vast majority of addons aren't changing and don't have fastboot\n      // directories. So I'm pretty comfortable with the optimization. It means\n      // that an addon author who creates a brand new fastboot directory in a v1\n      // packages will need to restart their build. (Really we hope new addons\n      // will be authored in v2 instead soon anyway, and they won't need the\n      // concept of \"fastboot directory\" because they can use the macro system to\n      // conditionally import some things only in fastboot.)\n      if (pathExistsSync(join(this.root, 'fastboot'))) {\n        tree = buildFunnel(this.rootTree, { srcDir: 'fastboot' });\n      }\n      tree = this.addonInstance.treeForFastBoot(tree);\n      if (tree) {\n        tree = buildFunnel(tree, { destDir: fastbootPublicationDir });\n      }\n    } else {\n      if (pathExistsSync(join(this.root, 'fastboot'))) {\n        tree = buildFunnel(this.rootTree, { srcDir: 'fastboot', destDir: fastbootPublicationDir });\n      }\n    }\n\n    if (tree) {\n      // this one doesn't go through transpile yet because it gets handled as\n      // part of the consuming app.\n      tree = this.maybeSetDirectoryMeta(built, tree, fastbootPublicationDir, 'fastboot-js');\n      built.trees.push(tree);\n    }\n  }\n\n  private buildPublicTree(built: IntermediateBuild) {\n    let publicTree;\n    // the extra isEngine condition is here because ember-engines injects a\n    // customized treeForPublic into every engine addon. We don't want or need\n    // it to run.\n    if (this.customizes('treeForPublic') && !this.isEngine()) {\n      let original = this.invokeOriginalTreeFor('public');\n      if (original) {\n        publicTree = buildFunnel(original, {\n          destDir: 'public',\n        });\n      }\n    } else if (this.hasStockTree('public')) {\n      publicTree = this.stockTree('public');\n    }\n    if (publicTree) {\n      let publicAssets: { [filename: string]: string } = {};\n      publicTree = new ObserveTree(publicTree, (outputPath: string) => {\n        publicAssets = {};\n        for (let filename of walkSync(join(outputPath, 'public'))) {\n          if (!filename.endsWith('/')) {\n            publicAssets[`./public/${filename}`] = './' + filename;\n          }\n        }\n      });\n      built.trees.push(publicTree);\n      built.dynamicMeta.push(() => ({ 'public-assets': publicAssets }));\n    }\n  }\n\n  private buildVendorTree(built: IntermediateBuild) {\n    if (this.customizes('treeForVendor')) {\n      // We don't have any particular opinions about the structure inside\n      // vendor, so even when it's customized we can just use the customized\n      // one.\n      let tree = this.invokeOriginalTreeFor('vendor');\n      if (tree) {\n        built.trees.push(\n          buildFunnel(tree, {\n            destDir: 'vendor',\n          })\n        );\n      }\n    } else if (this.hasStockTree('vendor')) {\n      built.trees.push(this.stockTree('vendor'));\n    }\n  }\n\n  private isEngine() {\n    return typeof this.addonInstance.getEngineConfigContents === 'function';\n  }\n\n  private buildEngineConfig(built: IntermediateBuild) {\n    if (!this.isEngine()) {\n      return;\n    }\n    // this addon is an engine, so it needs its own config/environment.js.\n    // ember-engines always emits a separate inline (not-meta-tag) config for\n    // fastboot, so we mimic that behavior here.\n    //\n    // getEngineConfigContents is an arbitrary customizable module, so we can't\n    // easily rewrite it to live inside our conditional, so it's safer in a\n    // separate module.\n    built.trees.push(writeFile('config/_environment_browser_.js', this.addonInstance.getEngineConfigContents?.()));\n    built.trees.push(\n      writeFile(\n        'config/environment.js',\n        `\n      import { macroCondition, getGlobalConfig, importSync } from '@embroider/macros';\n      let config;\n      if (macroCondition(getGlobalConfig().fastboot?.isRunning)){\n        config = ${JSON.stringify(this.addonInstance.engineConfig?.(this.app.env, {}), null, 2)};\n      } else {\n        config = importSync('./_environment_browser_.js').default;\n      }\n      export default config;\n    `\n      )\n    );\n  }\n\n  private buildPackageJSON(built: IntermediateBuild) {\n    built.trees.push(new RewritePackageJSON(this.rootTree, () => this.newPackageJSON));\n  }\n\n  @Memoize()\n  private build(): IntermediateBuild {\n    let built = new IntermediateBuild();\n    built.staticMeta['order-index'] = this.orderIdx;\n\n    if (this.options.lazyLoading === true || (this.options.lazyLoading && this.options.lazyLoading.enabled)) {\n      built.staticMeta['lazy-engine'] = true;\n    }\n\n    if (this.moduleName !== this.name) {\n      built.staticMeta['renamed-packages'] = {\n        [this.moduleName]: this.name,\n      };\n    }\n\n    this.buildTreeForAddon(built);\n    this.buildAddonStyles(built);\n    this.buildTreeForStyles(built);\n    this.buildAddonTestSupport(built);\n    this.buildTestSupport(built);\n    this.buildTreeForApp(built);\n    this.buildTreeForFastBoot(built);\n    this.buildPublicTree(built);\n    this.buildVendorTree(built);\n    this.buildEngineConfig(built);\n    this.buildPackageJSON(built);\n    return built;\n  }\n}\n\nexport interface V1AddonConstructor {\n  new (\n    addonInstance: any,\n    options: Required<Options>,\n    app: CompatApp,\n    packageCache: PackageCache,\n    orderIdx: number\n  ): V1Addon;\n\n  shouldApplyAdapter?(addonInstance: any): boolean;\n}\n\nclass IntermediateBuild {\n  trees: Node[] = [];\n  staticMeta: { [metaField: string]: any } = {};\n  dynamicMeta: (() => Partial<AddonMeta>)[] = [];\n}\n\nfunction babelPluginAllowedInStage1(plugin: PluginItem) {\n  if (isEmbroiderMacrosPlugin(plugin)) {\n    // the point of @embroider/macros is that it's allowed to stay in v2\n    // addon publication format, so it doesn't need to run here in stage1.\n    // We always run it in stage3.\n    return false;\n  }\n\n  if (isInlinePrecompilePlugin(plugin)) {\n    // Similarly, the inline precompile plugin must not run in stage1. We\n    // want all templates uncompiled. Instead, we will be adding our own\n    // plugin that only runs custom AST transforms inside inline\n    // templates.\n    return false;\n  }\n\n  if (isEmberAutoImportDynamic(plugin)) {\n    // We replace ember-auto-import's implementation of dynamic import(), so we\n    // need to stop its plugin from rewriting those.\n    return false;\n  }\n\n  if (isCompactReexports(plugin)) {\n    // We don't want to replace re-exports at this stage, since that will turn\n    // an `export` statement into a `define`, which is handled in Stage 3\n    return false;\n  }\n\n  if (isColocationPlugin(plugin)) {\n    // template co-location is a first-class feature we support directly, so\n    // whether or not the app brought a plugin for it we're going to do it our\n    // way.\n    return false;\n  }\n\n  return true;\n}\n\nfunction notColocatedTemplate(path: string) {\n  return !/^\\.\\/components\\/.*\\.hbs$/.test(path);\n}\n\nconst markedEmptyTree = new UnwatchedDir(process.cwd());\n\nconst stubbedSuper = () => {\n  return markedEmptyTree;\n};\n\nstubbedSuper.treeFor = () => {\n  return markedEmptyTree;\n};\n"]}