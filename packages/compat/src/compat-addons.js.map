{"version":3,"file":"compat-addons.js","sourceRoot":"","sources":["compat-addons.ts"],"names":[],"mappings":";;;;;AACA,+BAA+B;AAE/B,0CAAiG;AACjG,0DAAiC;AAEjC,qEAA+D;AAE/D,gFAAgF;AAChF,8EAA8E;AAC9E,kEAAkE;AAClE,EAAE;AACF,+EAA+E;AAC/E,+EAA+E;AAC/E,iBAAiB;AACjB,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,wBAAwB,KAAK,WAAW,EAAE,CAAC;IAChE,OAAO,CAAC,GAAG,CAAC,wBAAwB,GAAG,MAAM,CAAC;AAChD,CAAC;AAED,MAAqB,YAAY;IAO/B,YAAoB,SAAoB;QAApB,cAAS,GAAT,SAAS,CAAW;QANhC,aAAQ,GAAG,KAAK,CAAC;QAOvB,IAAI,CAAC,MAAM,GAAG,IAAA,4CAAmB,EAAC,SAAS,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC,IAAI,CAAC;IAClC,CAAC;IAED,IAAI,IAAI;QACN,OAAO,IAAI,mBAAY,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,0BAA0B,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACtG,CAAC;IAED,KAAK,CAAC,KAAK;QACT,OAAO;YACL,UAAU,EAAE,IAAA,cAAO,EAAC,IAAA,gCAAyB,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,eAAe,CAAC;SACrF,CAAC;IACJ,CAAC;IAEO,KAAK,CAAC,KAAK,CACjB,EACE,MAAM,GAGP,EACD,UAAgC;QAEhC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnB,IAAI,CAAC,QAAQ,GAAG,IAAI,mBAAQ,CAC1B,MAAM,EACN,IAAA,cAAO,EAAC,IAAA,gCAAyB,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,oBAAoB,CAAC,CAC9E,CAAC;QACJ,CAAC;QAED,IACE,CAAC,IAAI,CAAC,QAAQ,IAAI,iCAAiC;YACnD,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,EACtB,CAAC;YACD,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;YACrB,4BAAqB,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,eAAe,EAAE,CAAC;QACnF,CAAC;QACD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;CACF;AA9CD,+BA8CC","sourcesContent":["import type { Node } from 'broccoli-node-api';\nimport { resolve } from 'path';\nimport type { Stage } from '@embroider/core';\nimport { locateEmbroiderWorkingDir, RewrittenPackageCache, WaitForTrees } from '@embroider/core';\nimport TreeSync from 'tree-sync';\nimport type CompatApp from './compat-app';\nimport { convertLegacyAddons } from './standalone-addon-build';\n\n// This build stage expects to be run with broccoli memoization enabled in order\n// to get good rebuild performance. We turn it on by default here, but you can\n// still explicitly turn it off by setting the env var to \"false\".\n//\n// As for safetly mutating process.env: broccoli doesn't read this until a Node\n// executes its build hook, so as far as I can tell there's no way we could set\n// this too late.\nif (typeof process.env.BROCCOLI_ENABLED_MEMOIZE === 'undefined') {\n  process.env.BROCCOLI_ENABLED_MEMOIZE = 'true';\n}\n\nexport default class CompatAddons implements Stage {\n  private didBuild = false;\n  private treeSync: TreeSync | undefined;\n  readonly inputPath: string;\n\n  private addons: Node;\n\n  constructor(private compatApp: CompatApp) {\n    this.addons = convertLegacyAddons(compatApp);\n    this.inputPath = compatApp.root;\n  }\n\n  get tree(): Node {\n    return new WaitForTrees({ addons: this.addons }, '@embroider/compat/addons', this.build.bind(this));\n  }\n\n  async ready(): Promise<{ outputPath: string }> {\n    return {\n      outputPath: resolve(locateEmbroiderWorkingDir(this.compatApp.root), 'rewritten-app'),\n    };\n  }\n\n  private async build(\n    {\n      addons,\n    }: {\n      addons: string;\n    },\n    changedMap: Map<string, boolean>\n  ) {\n    if (!this.treeSync) {\n      this.treeSync = new TreeSync(\n        addons,\n        resolve(locateEmbroiderWorkingDir(this.compatApp.root), 'rewritten-packages')\n      );\n    }\n\n    if (\n      !this.didBuild || // always copy on the first build\n      changedMap.get(addons)\n    ) {\n      this.treeSync.sync();\n      RewrittenPackageCache.shared('embroider', this.compatApp.root).invalidateIndex();\n    }\n    this.didBuild = true;\n  }\n}\n"]}