{"version":3,"file":"standalone-addon-build.js","sourceRoot":"","sources":["standalone-addon-build.ts"],"names":[],"mappings":";;;;;AAYA,kDA6DC;AAxED,0CAAqG;AACrG,4EAAkD;AAClD,8EAAoD;AACpD,qDAAyC;AACzC,oDAA4B;AAC5B,gFAAsD;AACtD,kFAA8C;AAG9C,+BAA4B;AAE5B,SAAgB,mBAAmB,CAAC,SAAoB;IACtD,IAAI,YAAY,GAAG,mBAAY,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC;IACpE,IAAI,aAAa,GAAG,IAAI,2BAAe,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;IAEjE,IAAI,UAAU,GAAG,SAAS,CAAC,UAAU,EAAE,CAAC;IAExC,IAAI,UAAU,GAAG,IAAA,+BAAwB,EAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,cAAc,EAAE,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,CAAC,CAAC;IACpH,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;QAC1B,IAAI,OAAO,CAAC,GAAG,CAAC,4CAA4C,EAAE,CAAC;YAC7D,OAAO,CAAC,IAAI,CACV,yLAAyL,IAAA,iCAA0B,EACjN,UAAU,CACX,EAAE,CACJ,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,MAAM,IAAI,KAAK,CACb;;;;;;EAMN,IAAA,iCAA0B,EAAC,UAAU,CAAC;;;;WAI7B,CACJ,CAAC;QACJ,CAAC;IACH,CAAC;IAED,IAAI,QAAQ,GAAG,YAAY,CAAC,UAAU,CAAC,CAAC;IACxC,IAAI,KAAK,GAAG,eAAe,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC;IAE7D,IAAI,aAAa,GAAW,EAAE,CAAC;IAC/B,IAAI,aAAa,GAAG,CAAC,GAAG,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QAC1C,IAAI,QAAQ,GAAG,IAAA,4BAAgB,EAAC,GAAG,EAAE,aAAa,CAAC,CAAC;QACpD,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,OAAO,IAAI,wBAAM,CAAC,QAAQ,EAAE,EAAE,OAAO,EAAE,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACrE,CAAC,CAAC,CAAC;IAEH,IAAI,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;QACxD,IAAI,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAC9B,OAAO,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,cAAc,EAAE,CAAC;YACzF,QAAQ,CAAC,GAAG,EAAE,CAAC;QACjB,CAAC;QACD,QAAQ,CAAC,IAAI,CAAC,yBAAyB,CAAC,CAAC;QACzC,OAAO,IAAA,+BAAS,EAAC,IAAA,WAAI,EAAC,GAAG,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC;IAC1C,CAAC,CAAC,CAAC;IAEH,OAAO,IAAA,8BAAkB,EAAC;QACxB,GAAG,aAAa;QAChB,IAAI,wBAAM,CAAC,SAAS,CAAC,uBAAuB,CAAC,aAAa,CAAC,EAAE;YAC3D,OAAO,EAAE,+BAA+B;SACzC,CAAC;QACF,IAAI,wBAAM,CAAC,SAAS,CAAC,uBAAuB,CAAC,aAAa,CAAC,EAAE;YAC3D,OAAO,EAAE,+BAA+B;SACzC,CAAC;QACF,IAAA,+BAAS,EAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;QACvD,GAAG,WAAW;KACf,CAAC,CAAC;AACL,CAAC;AAED,SAAS,eAAe,CAAC,SAAoB,EAAE,UAAmB,EAAE,QAAsB;IACxF,IAAI,OAAO,GAA0B;QACnC,QAAQ,EAAE,EAAE;QACZ,gBAAgB,EAAE,EAAE;KACrB,CAAC;IACF,KAAK,IAAI,MAAM,IAAI,QAAQ,EAAE,CAAC;QAC5B,IAAI,OAAO,GAAG,GAAG,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,MAAM,CAAC,IAAI,EAAE,CAAC;QAClF,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;QACxC,IAAI,iBAAiB,GAAG,MAAM,CAAC,iBAAiB,CAAC;QACjD,IAAI,iBAAiB,EAAE,CAAC;YACtB,OAAO,CAAC,gBAAgB,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QACvF,CAAC;IACH,CAAC;IAED,4DAA4D;IAC5D,0EAA0E;IAC1E,6EAA6E;IAC7E,wEAAwE;IACxE,qCAAqC;IACrC,OAAO,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,IAAA,WAAI,EAAC,IAAI,EAAE,eAAe,CAAC,CAAC;IAE/D,IAAI,iBAAiB,GAAG,UAAU,CAAC,iBAAiB,CAAC;IACrD,IAAI,iBAAiB,EAAE,CAAC;QACtB,IAAI,UAAU,GAAG,CAAC,GAAG,iBAAiB,CAAC,MAAM,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAElE,mEAAmE;QACnE,OAAO,CAAC,gBAAgB,CAAC,IAAA,WAAI,EAAC,IAAI,EAAE,eAAe,CAAC,CAAC,GAAG,UAAU,CAAC;QAEnE,sEAAsE;QACtE,qEAAqE;QACrE,0DAA0D;QAC1D,OAAO,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC;IACzD,CAAC;IAED,OAAO,OAAO,CAAC;AACjB,CAAC;AAED,SAAS,YAAY,CAAC,GAAY,EAAE,OAAqB,IAAI,GAAG,EAAE,EAAE,SAAuB,IAAI,GAAG,EAAE;IAClG,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,YAAY,EAAE,CAAC;QACjC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE,CAAC;YAClB,SAAS;QACX,CAAC;QACD,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACd,IAAI,GAAG,CAAC,cAAc,EAAE,EAAE,CAAC;YACzB,IAAI,CAAC,GAAG,CAAC,SAAS,EAAE,EAAE,CAAC;gBACrB,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YAClB,CAAC;YACD,YAAY,CAAC,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,CAAC;QAClC,CAAC;IACH,CAAC;IACD,OAAO,MAAM,CAAC;AAChB,CAAC;AAED,SAAS,MAAM,CAAC,IAAY;IAC1B,IAAI,CAAC,GAAG,gBAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IAClC,OAAO,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AAClD,CAAC","sourcesContent":["import type { Package, RewrittenPackageIndex } from '@embroider/core';\nimport { PackageCache, summarizePeerDepViolations, validatePeerDependencies } from '@embroider/core';\nimport V1InstanceCache from './v1-instance-cache';\nimport buildCompatAddon from './build-compat-addon';\nimport { Funnel } from 'broccoli-funnel';\nimport crypto from 'crypto';\nimport broccoliMergeTrees from 'broccoli-merge-trees';\nimport writeFile from 'broccoli-file-creator';\nimport type { Node } from 'broccoli-node-api';\nimport type CompatApp from './compat-app';\nimport { join } from 'path';\n\nexport function convertLegacyAddons(compatApp: CompatApp) {\n  let packageCache = PackageCache.shared('embroider', compatApp.root);\n  let instanceCache = new V1InstanceCache(compatApp, packageCache);\n\n  let appPackage = compatApp.appPackage();\n\n  let violations = validatePeerDependencies(appPackage).filter(({ dep }) => dep.isEmberPackage() && !dep.isV2Ember());\n  if (violations.length > 0) {\n    if (process.env.I_HAVE_BAD_PEER_DEPS_AND_WANT_A_BROKEN_BUILD) {\n      console.warn(\n        `You have set process.env.I_HAVE_BAD_PEER_DEPS_AND_WANT_A_BROKEN_BUILD, so we're ignoring your broken peer deps. Please don't bother reporting any Embroider bugs until you unset it.\\n${summarizePeerDepViolations(\n          violations\n        )}`\n      );\n    } else {\n      throw new Error(\n        `Some V1 ember addons are resolving as incorrect peer dependencies. This makes it impossible for us to safely convert them to v2 format.\n\n  ðŸ‘‡ ðŸ‘‡ ðŸ‘‡\nðŸ‘‰ See https://github.com/embroider-build/embroider/blob/main/docs/peer-dependency-resolution-issues.md for an explanation of the problem and suggestions for fixing it.\n  ðŸ‘† ðŸ‘† ðŸ‘†\n\n${summarizePeerDepViolations(violations)}\n\n  ðŸ‘‡ ðŸ‘‡ ðŸ‘‡\nðŸ‘‰ See https://github.com/embroider-build/embroider/blob/main/docs/peer-dependency-resolution-issues.md for an explanation of the problem and suggestions for fixing it.\n  ðŸ‘† ðŸ‘† ðŸ‘†`\n      );\n    }\n  }\n\n  let v1Addons = findV1Addons(appPackage);\n  let index = buildAddonIndex(compatApp, appPackage, v1Addons);\n\n  let interiorTrees: Node[] = [];\n  let exteriorTrees = [...v1Addons].map(pkg => {\n    let interior = buildCompatAddon(pkg, instanceCache);\n    interiorTrees.push(interior);\n    return new Funnel(interior, { destDir: index.packages[pkg.root] });\n  });\n\n  let fakeTargets = Object.values(index.packages).map(dir => {\n    let segments = dir.split('/');\n    while (segments[segments.length - 1] && segments[segments.length - 1] !== 'node_modules') {\n      segments.pop();\n    }\n    segments.push('moved-package-target.js');\n    return writeFile(join(...segments), '');\n  });\n\n  return broccoliMergeTrees([\n    ...exteriorTrees,\n    new Funnel(compatApp.synthesizeStylesPackage(interiorTrees), {\n      destDir: '@embroider/synthesized-styles',\n    }),\n    new Funnel(compatApp.synthesizeVendorPackage(interiorTrees), {\n      destDir: '@embroider/synthesized-vendor',\n    }),\n    writeFile('index.json', JSON.stringify(index, null, 2)),\n    ...fakeTargets,\n  ]);\n}\n\nfunction buildAddonIndex(compatApp: CompatApp, appPackage: Package, packages: Set<Package>): RewrittenPackageIndex {\n  let content: RewrittenPackageIndex = {\n    packages: {},\n    extraResolutions: {},\n  };\n  for (let oldPkg of packages) {\n    let newRoot = `${oldPkg.name}.${hashed(oldPkg.root)}/node_modules/${oldPkg.name}`;\n    content.packages[oldPkg.root] = newRoot;\n    let nonResolvableDeps = oldPkg.nonResolvableDeps;\n    if (nonResolvableDeps) {\n      content.extraResolutions[newRoot] = [...nonResolvableDeps.values()].map(v => v.root);\n    }\n  }\n\n  // adding an entry for the app itself to have a place in the\n  // rewritten-packages, even though this stage hasn't actually put it there\n  // yet. This directory lives outside our rewritten-pacakges directory because\n  // it's produced by a separate build stage, and it's easier to have them\n  // writing into separate directories.\n  content.packages[compatApp.root] = join('..', 'rewritten-app');\n\n  let nonResolvableDeps = appPackage.nonResolvableDeps;\n  if (nonResolvableDeps) {\n    let extraRoots = [...nonResolvableDeps.values()].map(v => v.root);\n\n    // the app gets extraResolutions support just like every addon does\n    content.extraResolutions[join('..', 'rewritten-app')] = extraRoots;\n\n    // but it also gets extraResolutions registered against its *original*\n    // location, because the app is unique because stage2 needs a Package\n    // representing the *unmoved* app but seeing *moved* deps.\n    content.extraResolutions[appPackage.root] = extraRoots;\n  }\n\n  return content;\n}\n\nfunction findV1Addons(pkg: Package, seen: Set<Package> = new Set(), output: Set<Package> = new Set()): Set<Package> {\n  for (let dep of pkg.dependencies) {\n    if (seen.has(dep)) {\n      continue;\n    }\n    seen.add(dep);\n    if (dep.isEmberPackage()) {\n      if (!dep.isV2Addon()) {\n        output.add(dep);\n      }\n      findV1Addons(dep, seen, output);\n    }\n  }\n  return output;\n}\n\nfunction hashed(path: string): string {\n  let h = crypto.createHash('sha1');\n  return h.update(path).digest('hex').slice(0, 8);\n}\n"]}