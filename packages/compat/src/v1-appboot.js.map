{"version":3,"file":"v1-appboot.js","sourceRoot":"","sources":["v1-appboot.ts"],"names":[],"mappings":";;;;;;AAAA,sEAAqC;AAErC,+BAA4B;AAC5B,uCAAwD;AAExD,MAAa,cAAe,SAAQ,yBAAM;IAExC;QACE,KAAK,CAAC,EAAE,EAAE;YACR,gBAAgB,EAAE,IAAI;YACtB,UAAU,EAAE,KAAK;SAClB,CAAC,CAAC;IACL,CAAC;IACD,KAAK;QACH,IAAI,QAAQ,GAAG,IAAA,WAAI,EAAC,IAAI,CAAC,UAAU,EAAE,oBAAoB,CAAC,CAAC;QAC3D,IAAI,QAAQ,GAAG,4BAA4B,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,KAAK,QAAQ,EAAE,CAAC;YACzD,IAAA,yBAAc,EAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;QACrC,CAAC;QACD,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC;IAC/B,CAAC;CACF;AAhBD,wCAgBC;AAED,MAAa,aAAc,SAAQ,yBAAM;IAGvC,YAAY,WAAiB;QAC3B,KAAK,CAAC,CAAC,WAAW,CAAC,EAAE;YACnB,gBAAgB,EAAE,IAAI;YACtB,UAAU,EAAE,KAAK;SAClB,CAAC,CAAC;QALG,aAAQ,GAAG,KAAK,CAAC;IAMzB,CAAC;IACD,KAAK;QACH,IAAI,CAAC,OAAO,GAAG,IAAA,uBAAY,EAAC,IAAA,WAAI,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,oBAAoB,CAAC,EAAE,MAAM,CAAC,CAAC;QACpF,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IACvB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACnB,MAAM,IAAI,KAAK,CAAC,6CAA6C,CAAC,CAAC;QACjE,CAAC;QACD,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;CACF;AApBD,sCAoBC","sourcesContent":["import Plugin from 'broccoli-plugin';\nimport type { Node } from 'broccoli-node-api';\nimport { join } from 'path';\nimport { readFileSync, outputFileSync } from 'fs-extra';\n\nexport class WriteV1AppBoot extends Plugin {\n  private lastContents: string | undefined;\n  constructor() {\n    super([], {\n      persistentOutput: true,\n      needsCache: false,\n    });\n  }\n  build() {\n    let filename = join(this.outputPath, 'config/app-boot.js');\n    let contents = `{{content-for \"app-boot\"}}`;\n    if (!this.lastContents || this.lastContents !== contents) {\n      outputFileSync(filename, contents);\n    }\n    this.lastContents = contents;\n  }\n}\n\nexport class ReadV1AppBoot extends Plugin {\n  private appBoot: string | undefined;\n  private hasBuilt = false;\n  constructor(appBootTree: Node) {\n    super([appBootTree], {\n      persistentOutput: true,\n      needsCache: false,\n    });\n  }\n  build() {\n    this.appBoot = readFileSync(join(this.inputPaths[0], `config/app-boot.js`), 'utf8');\n    this.hasBuilt = true;\n  }\n\n  readAppBoot() {\n    if (!this.hasBuilt) {\n      throw new Error(`AppBoot not available until after the build`);\n    }\n    return this.appBoot;\n  }\n}\n"]}