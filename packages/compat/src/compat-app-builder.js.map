{"version":3,"file":"compat-app-builder.js","sourceRoot":"","sources":["compat-app-builder.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Node as BroccoliNode } from 'broccoli-node-api';\nimport type {\n  OutputPaths,\n  Asset,\n  EmberAsset,\n  AddonPackage,\n  Engine,\n  AppMeta,\n  TemplateColocationPluginOptions,\n} from '@embroider/core';\nimport {\n  explicitRelative,\n  extensionsPattern,\n  debug,\n  warn,\n  jsHandlebarsCompile,\n  templateColocationPluginPath,\n  cacheBustingPluginVersion,\n  cacheBustingPluginPath,\n  Resolver,\n  locateEmbroiderWorkingDir,\n} from '@embroider/core';\nimport walkSync from 'walk-sync';\nimport { resolve as resolvePath, posix } from 'path';\nimport type { JSDOM } from 'jsdom';\nimport type Options from './options';\nimport type { CompatResolverOptions } from './resolver-transform';\nimport type { PackageRules } from './dependency-rules';\nimport { activePackageRules } from './dependency-rules';\nimport flatMap from 'lodash/flatMap';\nimport sortBy from 'lodash/sortBy';\nimport flatten from 'lodash/flatten';\nimport partition from 'lodash/partition';\nimport mergeWith from 'lodash/mergeWith';\nimport cloneDeep from 'lodash/cloneDeep';\nimport { sync as resolveSync } from 'resolve';\nimport bind from 'bind-decorator';\nimport { outputJSONSync, readJSONSync, rmSync, statSync, unlinkSync, writeFileSync, realpathSync } from 'fs-extra';\nimport type { Options as EtcOptions } from 'babel-plugin-ember-template-compilation';\nimport type { Options as ResolverTransformOptions } from './resolver-transform';\nimport type { Options as AdjustImportsOptions } from './babel-plugin-adjust-imports';\nimport { PreparedEmberHTML } from '@embroider/core/src/ember-html';\nimport type { InMemoryAsset, OnDiskAsset, ImplicitAssetPaths } from '@embroider/core/src/asset';\nimport { makePortable } from '@embroider/core/src/portable-babel-config';\nimport type { RouteFiles } from '@embroider/core/src/app-files';\nimport { AppFiles } from '@embroider/core/src/app-files';\nimport type { PortableHint } from '@embroider/core/src/portable';\nimport { maybeNodeModuleVersion } from '@embroider/core/src/portable';\nimport assertNever from 'assert-never';\nimport { Memoize } from 'typescript-memoize';\nimport { join, dirname } from 'path';\nimport resolve from 'resolve';\nimport type { V1Config } from './v1-config';\nimport type { AddonMeta, Package, PackageInfo } from '@embroider/core';\nimport { ensureDirSync, copySync, readdirSync, pathExistsSync } from 'fs-extra';\nimport type { TransformOptions } from '@babel/core';\nimport { MacrosConfig } from '@embroider/macros/src/node';\nimport SourceMapConcat from 'fast-sourcemap-concat';\nimport escapeRegExp from 'escape-string-regexp';\n\nimport type CompatApp from './compat-app';\nimport { SyncDir } from './sync-dir';\n\n// This exists during the actual broccoli build step. As opposed to CompatApp,\n// which also exists during pipeline-construction time.\n\nexport class CompatAppBuilder {\n  // for each relativePath, an Asset we have already emitted\n  private assets: Map<string, InternalAsset> = new Map();\n\n  constructor(\n    private root: string,\n    private origAppPackage: Package,\n    private appPackageWithMovedDeps: Package,\n    private options: Required<Options>,\n    private compatApp: CompatApp,\n    private configTree: V1Config,\n    private synthVendor: Package,\n    private synthStyles: Package\n  ) {}\n\n  @Memoize()\n  private fastbootJSSrcDir() {\n    let target = join(this.compatApp.root, 'fastboot');\n    if (pathExistsSync(target)) {\n      return target;\n    }\n  }\n\n  private extractAssets(treePaths: OutputPaths<TreeNames>): Asset[] {\n    let assets: Asset[] = [];\n\n    // Everything in our traditional public tree is an on-disk asset\n    if (treePaths.publicTree) {\n      walkSync\n        .entries(treePaths.publicTree, {\n          directories: false,\n        })\n        .forEach(entry => {\n          assets.push({\n            kind: 'on-disk',\n            relativePath: entry.relativePath,\n            sourcePath: entry.fullPath,\n            mtime: entry.mtime as unknown as number, // https://github.com/joliss/node-walk-sync/pull/38\n            size: entry.size,\n          });\n        });\n    }\n\n    // ember-cli traditionally outputs a dummy testem.js file to prevent\n    // spurious errors when running tests under \"ember s\".\n    if (this.compatApp.shouldBuildTests) {\n      let testemAsset = this.findTestemAsset();\n      if (testemAsset) {\n        assets.push(testemAsset);\n      }\n    }\n\n    for (let asset of this.emberEntrypoints(treePaths.htmlTree)) {\n      assets.push(asset);\n    }\n\n    return assets;\n  }\n\n  @Memoize()\n  private findTestemAsset(): Asset | undefined {\n    let sourcePath;\n    try {\n      sourcePath = resolveSync('ember-cli/lib/broccoli/testem.js', { basedir: this.root });\n    } catch (err) {}\n    if (sourcePath) {\n      let stat = statSync(sourcePath);\n      return {\n        kind: 'on-disk',\n        relativePath: 'testem.js',\n        sourcePath,\n        mtime: stat.mtime.getTime(),\n        size: stat.size,\n      };\n    }\n  }\n\n  private activeAddonChildren(pkg: Package): AddonPackage[] {\n    let result = (pkg.dependencies.filter(this.isActiveAddon) as AddonPackage[]).filter(\n      // When looking for child addons, we want to ignore 'peerDependencies' of\n      // a given package, to align with how ember-cli resolves addons. So here\n      // we only include dependencies that are definitely active due to one of\n      // the other sections.\n      addon => pkg.categorizeDependency(addon.name) !== 'peerDependencies'\n    );\n    if (pkg === this.appPackageWithMovedDeps) {\n      let extras = [this.synthVendor, this.synthStyles].filter(this.isActiveAddon) as AddonPackage[];\n      result = [...result, ...extras];\n    }\n    return result.sort(this.orderAddons);\n  }\n\n  @Memoize()\n  private get allActiveAddons(): AddonPackage[] {\n    let result = this.appPackageWithMovedDeps.findDescendants(this.isActiveAddon) as AddonPackage[];\n    let extras = [this.synthVendor, this.synthStyles].filter(this.isActiveAddon) as AddonPackage[];\n    let extraDescendants = flatMap(extras, dep => dep.findDescendants(this.isActiveAddon)) as AddonPackage[];\n    result = [...result, ...extras, ...extraDescendants];\n    return result.sort(this.orderAddons);\n  }\n\n  @bind\n  private isActiveAddon(pkg: Package): boolean {\n    // stage1 already took care of converting everything that's actually active\n    // into v2 addons. If it's not a v2 addon, we don't want it.\n    //\n    // We can encounter v1 addons here when there is inactive stuff floating\n    // around in the node_modules that accidentally satisfy something like an\n    // optional peer dep.\n    return pkg.isV2Addon();\n  }\n\n  @bind\n  private orderAddons(depA: Package, depB: Package): number {\n    let depAIdx = 0;\n    let depBIdx = 0;\n\n    if (depA && depA.meta && depA.isV2Addon()) {\n      depAIdx = depA.meta['order-index'] || 0;\n    }\n    if (depB && depB.meta && depB.isV2Addon()) {\n      depBIdx = depB.meta['order-index'] || 0;\n    }\n\n    return depAIdx - depBIdx;\n  }\n\n  private resolvableExtensions(): string[] {\n    // webpack's default is ['.wasm', '.mjs', '.js', '.json']. Keeping that\n    // subset in that order is sensible, since many third-party libraries will\n    // expect it to work that way.\n    //\n    // For TS, we defer to ember-cli-babel, and the setting for\n    // \"enableTypescriptTransform\" can be set with and without\n    // ember-cli-typescript\n    return ['.wasm', '.mjs', '.js', '.json', '.ts', '.hbs', '.hbs.js'];\n  }\n\n  private *emberEntrypoints(htmlTreePath: string): IterableIterator<Asset> {\n    let classicEntrypoints = [\n      { entrypoint: 'index.html', includeTests: false },\n      { entrypoint: 'tests/index.html', includeTests: true },\n    ];\n    if (!this.compatApp.shouldBuildTests) {\n      classicEntrypoints.pop();\n    }\n    for (let { entrypoint, includeTests } of classicEntrypoints) {\n      let sourcePath = join(htmlTreePath, entrypoint);\n      let stats = statSync(sourcePath);\n      let asset: EmberAsset = {\n        kind: 'ember',\n        relativePath: entrypoint,\n        includeTests,\n        sourcePath,\n        mtime: stats.mtime.getTime(),\n        size: stats.size,\n        rootURL: this.rootURL(),\n        prepare: (dom: JSDOM) => {\n          let scripts = [...dom.window.document.querySelectorAll('script')];\n          let styles = [...dom.window.document.querySelectorAll('link[rel*=\"stylesheet\"]')] as HTMLLinkElement[];\n          return {\n            javascript: this.compatApp.findAppScript(scripts, entrypoint),\n            styles: this.compatApp.findAppStyles(styles, entrypoint),\n            implicitScripts: this.compatApp.findVendorScript(scripts, entrypoint),\n            implicitStyles: this.compatApp.findVendorStyles(styles, entrypoint),\n            testJavascript: this.compatApp.findTestScript(scripts),\n            implicitTestScripts: this.compatApp.findTestSupportScript(scripts),\n            implicitTestStyles: this.compatApp.findTestSupportStyles(styles),\n          };\n        },\n      };\n      yield asset;\n    }\n  }\n\n  private modulePrefix(): string {\n    return this.configTree.readConfig().modulePrefix;\n  }\n\n  private podModulePrefix(): string | undefined {\n    return this.configTree.readConfig().podModulePrefix;\n  }\n\n  private rootURL(): string {\n    return this.configTree.readConfig().rootURL;\n  }\n\n  @Memoize()\n  private activeRules() {\n    return activePackageRules(this.options.packageRules.concat(defaultAddonPackageRules()), [\n      { name: this.origAppPackage.name, version: this.origAppPackage.version, root: this.root },\n      ...this.allActiveAddons.filter(p => p.meta['auto-upgraded']),\n    ]);\n  }\n\n  private resolverConfig(engines: AppFiles[]): CompatResolverOptions {\n    let renamePackages = Object.assign({}, ...this.allActiveAddons.map(dep => dep.meta['renamed-packages']));\n    let renameModules = Object.assign({}, ...this.allActiveAddons.map(dep => dep.meta['renamed-modules']));\n\n    let activeAddons: CompatResolverOptions['activeAddons'] = {};\n    for (let addon of this.allActiveAddons) {\n      activeAddons[addon.name] = addon.root;\n    }\n\n    let options: CompatResolverOptions['options'] = {\n      staticHelpers: this.options.staticHelpers,\n      staticModifiers: this.options.staticModifiers,\n      staticComponents: this.options.staticComponents,\n      allowUnsafeDynamicComponents: this.options.allowUnsafeDynamicComponents,\n    };\n\n    let config: CompatResolverOptions = {\n      // this part is the base ModuleResolverOptions as required by @embroider/core\n      activeAddons,\n      renameModules,\n      renamePackages,\n      resolvableExtensions: this.resolvableExtensions(),\n      appRoot: this.origAppPackage.root,\n      engines: engines.map((appFiles, index) => ({\n        packageName: appFiles.engine.package.name,\n        // first engine is the app, which has been relocated to this.root\n        // we need to use the real path here because webpack requests always use the real path i.e. follow symlinks\n        root: realpathSync(index === 0 ? this.root : appFiles.engine.package.root),\n        fastbootFiles: appFiles.fastbootFiles,\n        activeAddons: [...appFiles.engine.addons]\n          .map(a => ({\n            name: a.name,\n            root: a.root,\n          }))\n          // the traditional order is the order in which addons will run, such\n          // that the last one wins. Our resolver's order is the order to\n          // search, so first one wins.\n          .reverse(),\n      })),\n      amdCompatibility: this.options.amdCompatibility,\n\n      // this is the additional stufff that @embroider/compat adds on top to do\n      // global template resolving\n      modulePrefix: this.modulePrefix(),\n      podModulePrefix: this.podModulePrefix(),\n      activePackageRules: this.activeRules(),\n      options,\n    };\n\n    return config;\n  }\n\n  private scriptPriority(pkg: Package) {\n    switch (pkg.name) {\n      case 'loader.js':\n        return 0;\n      case 'ember-source':\n        return 10;\n      default:\n        return 1000;\n    }\n  }\n\n  @Memoize()\n  private get resolvableExtensionsPattern(): RegExp {\n    return extensionsPattern(this.resolvableExtensions());\n  }\n\n  private impliedAssets(\n    type: keyof ImplicitAssetPaths,\n    engine: AppFiles,\n    emberENV?: EmberENV\n  ): (OnDiskAsset | InMemoryAsset)[] {\n    let result: (OnDiskAsset | InMemoryAsset)[] = this.impliedAddonAssets(type, engine).map(\n      (sourcePath: string): OnDiskAsset => {\n        let stats = statSync(sourcePath);\n        return {\n          kind: 'on-disk',\n          relativePath: explicitRelative(this.root, sourcePath),\n          sourcePath,\n          mtime: stats.mtimeMs,\n          size: stats.size,\n        };\n      }\n    );\n\n    if (type === 'implicit-scripts') {\n      result.unshift({\n        kind: 'in-memory',\n        relativePath: '_testing_prefix_.js',\n        source: `var runningTests=false;`,\n      });\n\n      result.unshift({\n        kind: 'in-memory',\n        relativePath: '_ember_env_.js',\n        source: `window.EmberENV={ ...(window.EmberENV || {}), ...${JSON.stringify(emberENV, null, 2)} };`,\n      });\n\n      result.push({\n        kind: 'in-memory',\n        relativePath: '_loader_.js',\n        source: `loader.makeDefaultExport=false;`,\n      });\n    }\n\n    if (type === 'implicit-test-scripts') {\n      // this is the traditional test-support-suffix.js\n      result.push({\n        kind: 'in-memory',\n        relativePath: '_testing_suffix_.js',\n        source: `\n        var runningTests=true;\n        if (typeof Testem !== 'undefined' && (typeof QUnit !== 'undefined' || typeof Mocha !== 'undefined')) {\n          Testem.hookIntoTestFramework();\n        }`,\n      });\n\n      // whether or not anybody was actually using @embroider/macros\n      // explicitly as an addon, we ensure its test-support file is always\n      // present.\n      if (!result.find(s => s.kind === 'on-disk' && s.sourcePath.endsWith('embroider-macros-test-support.js'))) {\n        result.unshift({\n          kind: 'on-disk',\n          sourcePath: require.resolve('@embroider/macros/src/vendor/embroider-macros-test-support'),\n          mtime: 0,\n          size: 0,\n          relativePath: 'embroider-macros-test-support.js',\n        });\n      }\n    }\n\n    return result;\n  }\n\n  private impliedAddonAssets(type: keyof ImplicitAssetPaths, { engine }: AppFiles): string[] {\n    let result: Array<string> = [];\n    for (let addon of sortBy(Array.from(engine.addons), this.scriptPriority.bind(this))) {\n      let implicitScripts = addon.meta[type];\n      if (implicitScripts) {\n        let styles = [];\n        let options = { basedir: addon.root };\n        for (let mod of implicitScripts) {\n          if (type === 'implicit-styles') {\n            // exclude engines because they will handle their own css importation\n            if (!addon.isLazyEngine()) {\n              styles.push(resolve.sync(mod, options));\n            }\n          } else {\n            result.push(resolve.sync(mod, options));\n          }\n        }\n        if (styles.length) {\n          result = [...styles, ...result];\n        }\n      }\n    }\n    return result;\n  }\n\n  @Memoize()\n  private babelConfig(resolverConfig: CompatResolverOptions) {\n    let babel = cloneDeep(this.compatApp.babelConfig());\n\n    if (!babel.plugins) {\n      babel.plugins = [];\n    }\n\n    // Our stage3 code is always allowed to use dynamic import. We may emit it\n    // ourself when splitting routes.\n    babel.plugins.push(require.resolve('@babel/plugin-syntax-dynamic-import'));\n\n    // https://github.com/webpack/webpack/issues/12154\n    babel.plugins.push(require.resolve('./rename-require-plugin'));\n\n    babel.plugins.push([require.resolve('babel-plugin-ember-template-compilation'), this.etcOptions(resolverConfig)]);\n\n    // this is @embroider/macros configured for full stage3 resolution\n    babel.plugins.push(...this.compatApp.macrosConfig.babelPluginConfig());\n\n    let colocationOptions: TemplateColocationPluginOptions = {\n      appRoot: this.origAppPackage.root,\n\n      // This extra weirdness is a compromise in favor of build performance.\n      //\n      // 1. When auto-upgrading an addon from v1 to v2, we definitely want to\n      //    run any custom AST transforms in stage1.\n      //\n      // 2. In general case, AST transforms are allowed to manipulate Javascript\n      //    scope. This means that running transforms -- even when we're doing\n      //    source-to-source compilation that emits handlebars and not wire\n      //    format -- implies changing .hbs files into .js files.\n      //\n      // 3. So stage1 may need to rewrite .hbs to .hbs.js (to avoid colliding\n      //    with an existing co-located .js file).\n      //\n      // 4. But stage1 doesn't necessarily want to run babel over the\n      //    corresponding JS file. Most of the time, that's just an\n      //    unnecessarily expensive second parse. (We only run it in stage1 to\n      //    eliminate an addon's custom babel plugins, and many addons don't\n      //    have any.)\n      //\n      // 5. Therefore, the work of template-colocation gets defered until here,\n      //    and it may see co-located templates named `.hbs.js` instead of the\n      //    usual `.hbs.\n      templateExtensions: ['.hbs', '.hbs.js'],\n\n      // All of the above only applies to auto-upgraded packages that were\n      // authored in v1. V2 packages don't get any of this complexity, they're\n      // supposed to take care of colocating their own templates explicitly.\n      packageGuard: true,\n    };\n    babel.plugins.push([templateColocationPluginPath, colocationOptions]);\n\n    babel.plugins.push([\n      require.resolve('./babel-plugin-adjust-imports'),\n      (() => {\n        let pluginConfig: AdjustImportsOptions = {\n          appRoot: resolverConfig.appRoot,\n        };\n        return pluginConfig;\n      })(),\n    ]);\n\n    // we can use globally shared babel runtime by default\n    babel.plugins.push([\n      require.resolve('@babel/plugin-transform-runtime'),\n      { absoluteRuntime: __dirname, useESModules: true, regenerator: false },\n    ]);\n\n    const portable = makePortable(babel, { basedir: this.root }, this.portableHints);\n    addCachablePlugin(portable.config);\n    return portable;\n  }\n\n  private insertEmberApp(\n    asset: ParsedEmberAsset,\n    appFiles: AppFiles[],\n    prepared: Map<string, InternalAsset>,\n    emberENV: EmberENV\n  ) {\n    let html = asset.html;\n\n    if (this.fastbootConfig) {\n      // ignore scripts like ember-cli-livereload.js which are not really associated with\n      // \"the app\".\n      let ignoreScripts = html.dom.window.document.querySelectorAll('script');\n      ignoreScripts.forEach(script => {\n        script.setAttribute('data-fastboot-ignore', '');\n      });\n    }\n\n    // our tests entrypoint already includes a correct module dependency on the\n    // app, so we only insert the app when we're not inserting tests\n    if (!asset.fileAsset.includeTests) {\n      let appJS = this.topAppJSAsset(appFiles, prepared);\n      html.insertScriptTag(html.javascript, appJS.relativePath, { type: 'module' });\n    }\n\n    if (this.fastbootConfig) {\n      // any extra fastboot app files get inserted into our html.javascript\n      // section, after the app has been inserted.\n      for (let script of this.fastbootConfig.extraAppFiles) {\n        html.insertScriptTag(html.javascript, script, { tag: 'fastboot-script' });\n      }\n    }\n\n    html.insertStyleLink(html.styles, `assets/${this.origAppPackage.name}.css`);\n\n    const parentEngine = appFiles.find(e => !e.engine.parent)!;\n    let vendorJS = this.implicitScriptsAsset(prepared, parentEngine, emberENV);\n    if (vendorJS) {\n      html.insertScriptTag(html.implicitScripts, vendorJS.relativePath);\n    }\n\n    if (this.fastbootConfig) {\n      // any extra fastboot vendor files get inserted into our\n      // html.implicitScripts section, after the regular implicit script\n      // (vendor.js) have been inserted.\n      for (let script of this.fastbootConfig.extraVendorFiles) {\n        html.insertScriptTag(html.implicitScripts, script, { tag: 'fastboot-script' });\n      }\n    }\n\n    let implicitStyles = this.implicitStylesAsset(prepared, parentEngine);\n    if (implicitStyles) {\n      html.insertStyleLink(html.implicitStyles, implicitStyles.relativePath);\n    }\n\n    if (!asset.fileAsset.includeTests) {\n      return;\n    }\n\n    // Test-related assets happen below this point\n\n    let testJS = this.testJSEntrypoint(appFiles, prepared);\n    html.insertScriptTag(html.testJavascript, testJS.relativePath, { type: 'module' });\n\n    let implicitTestScriptsAsset = this.implicitTestScriptsAsset(prepared, parentEngine);\n    if (implicitTestScriptsAsset) {\n      html.insertScriptTag(html.implicitTestScripts, implicitTestScriptsAsset.relativePath);\n    }\n\n    let implicitTestStylesAsset = this.implicitTestStylesAsset(prepared, parentEngine);\n    if (implicitTestStylesAsset) {\n      html.insertStyleLink(html.implicitTestStyles, implicitTestStylesAsset.relativePath);\n    }\n  }\n\n  private implicitScriptsAsset(\n    prepared: Map<string, InternalAsset>,\n    application: AppFiles,\n    emberENV: EmberENV\n  ): InternalAsset | undefined {\n    let asset = prepared.get('assets/vendor.js');\n    if (!asset) {\n      let implicitScripts = this.impliedAssets('implicit-scripts', application, emberENV);\n      if (implicitScripts.length > 0) {\n        asset = new ConcatenatedAsset('assets/vendor.js', implicitScripts, this.resolvableExtensionsPattern);\n        prepared.set(asset.relativePath, asset);\n      }\n    }\n    return asset;\n  }\n\n  private implicitStylesAsset(prepared: Map<string, InternalAsset>, application: AppFiles): InternalAsset | undefined {\n    let asset = prepared.get('assets/vendor.css');\n    if (!asset) {\n      let implicitStyles = this.impliedAssets('implicit-styles', application);\n      if (implicitStyles.length > 0) {\n        // we reverse because we want the synthetic vendor style at the top\n        asset = new ConcatenatedAsset('assets/vendor.css', implicitStyles.reverse(), this.resolvableExtensionsPattern);\n        prepared.set(asset.relativePath, asset);\n      }\n    }\n    return asset;\n  }\n\n  private implicitTestScriptsAsset(\n    prepared: Map<string, InternalAsset>,\n    application: AppFiles\n  ): InternalAsset | undefined {\n    let testSupportJS = prepared.get('assets/test-support.js');\n    if (!testSupportJS) {\n      let implicitTestScripts = this.impliedAssets('implicit-test-scripts', application);\n      if (implicitTestScripts.length > 0) {\n        testSupportJS = new ConcatenatedAsset(\n          'assets/test-support.js',\n          implicitTestScripts,\n          this.resolvableExtensionsPattern\n        );\n        prepared.set(testSupportJS.relativePath, testSupportJS);\n      }\n    }\n    return testSupportJS;\n  }\n\n  private implicitTestStylesAsset(\n    prepared: Map<string, InternalAsset>,\n    application: AppFiles\n  ): InternalAsset | undefined {\n    let asset = prepared.get('assets/test-support.css');\n    if (!asset) {\n      let implicitTestStyles = this.impliedAssets('implicit-test-styles', application);\n      if (implicitTestStyles.length > 0) {\n        asset = new ConcatenatedAsset('assets/test-support.css', implicitTestStyles, this.resolvableExtensionsPattern);\n        prepared.set(asset.relativePath, asset);\n      }\n    }\n    return asset;\n  }\n\n  // recurse to find all active addons that don't cross an engine boundary.\n  // Inner engines themselves will be returned, but not those engines' children.\n  // The output set's insertion order is the proper ember-cli compatible\n  // ordering of the addons.\n  private findActiveAddons(pkg: Package, engine: Engine, isChild = false): void {\n    for (let child of this.activeAddonChildren(pkg)) {\n      if (!child.isEngine()) {\n        this.findActiveAddons(child, engine, true);\n      }\n      engine.addons.add(child);\n    }\n    // ensure addons are applied in the correct order, if set (via @embroider/compat/v1-addon)\n    if (!isChild) {\n      engine.addons = new Set(\n        [...engine.addons].sort((a, b) => {\n          return (a.meta['order-index'] || 0) - (b.meta['order-index'] || 0);\n        })\n      );\n    }\n  }\n\n  private partitionEngines(appJSPath: string): Engine[] {\n    let queue: Engine[] = [\n      {\n        package: this.appPackageWithMovedDeps,\n        addons: new Set(),\n        parent: undefined,\n        sourcePath: appJSPath,\n        modulePrefix: this.modulePrefix(),\n        appRelativePath: '.',\n      },\n    ];\n    let done: Engine[] = [];\n    let seenEngines: Set<Package> = new Set();\n    while (true) {\n      let current = queue.shift();\n      if (!current) {\n        break;\n      }\n      this.findActiveAddons(current.package, current);\n      for (let addon of current.addons) {\n        if (addon.isEngine() && !seenEngines.has(addon)) {\n          seenEngines.add(addon);\n          queue.push({\n            package: addon,\n            addons: new Set(),\n            parent: current,\n            sourcePath: addon.root,\n            modulePrefix: addon.name,\n            appRelativePath: explicitRelative(this.root, addon.root),\n          });\n        }\n      }\n      done.push(current);\n    }\n    return done;\n  }\n\n  @Memoize()\n  private get activeFastboot() {\n    return this.activeAddonChildren(this.appPackageWithMovedDeps).find(a => a.name === 'ember-cli-fastboot');\n  }\n\n  private emberVersion() {\n    let pkg = this.activeAddonChildren(this.appPackageWithMovedDeps).find(a => a.name === 'ember-source');\n    if (!pkg) {\n      throw new Error('no ember version!');\n    }\n    return pkg.version;\n  }\n\n  @Memoize()\n  private get fastbootConfig():\n    | { packageJSON: PackageInfo; extraAppFiles: string[]; extraVendorFiles: string[] }\n    | undefined {\n    if (this.activeFastboot) {\n      // this is relying on work done in stage1 by @embroider/compat/src/compat-adapters/ember-cli-fastboot.ts\n      let packageJSON = readJSONSync(join(this.activeFastboot.root, '_fastboot_', 'package.json'));\n      let { extraAppFiles, extraVendorFiles } = packageJSON['embroider-fastboot'];\n      delete packageJSON['embroider-fastboot'];\n      extraVendorFiles.push('assets/embroider_macros_fastboot_init.js');\n      return { packageJSON, extraAppFiles, extraVendorFiles };\n    }\n  }\n\n  private engines: { engine: Engine; appSync: SyncDir; fastbootSync: SyncDir | undefined }[] | undefined;\n\n  private updateAppJS(appJSPath: string): AppFiles[] {\n    if (!this.engines) {\n      this.engines = this.partitionEngines(appJSPath).map(engine => {\n        if (engine.sourcePath === appJSPath) {\n          // this is the app. We have more to do for the app than for other\n          // engines.\n          let fastbootSync: SyncDir | undefined;\n          if (this.activeFastboot) {\n            let fastbootDir = this.fastbootJSSrcDir();\n            if (fastbootDir) {\n              fastbootSync = new SyncDir(fastbootDir, resolvePath(this.root, '_fastboot_'));\n            }\n          }\n          return {\n            engine,\n            appSync: new SyncDir(appJSPath, this.root),\n            fastbootSync,\n          };\n        } else {\n          // this is not the app, so it's some other engine. Engines are already\n          // built by stage1 like all other addons, so we only need to observe\n          // their files, not doing any actual copying or building.\n          return {\n            engine,\n            appSync: new SyncDir(engine.sourcePath, undefined),\n\n            // AFAIK, we've never supported a fastboot overlay directory in an\n            // engine. But if we do need that, it would go here.\n            fastbootSync: undefined,\n          };\n        }\n      });\n    }\n\n    for (let engine of this.engines) {\n      engine.appSync.update();\n      engine.fastbootSync?.update();\n    }\n\n    return this.engines.map(\n      ({ engine, appSync, fastbootSync }) =>\n        new AppFiles(\n          engine,\n          appSync.files,\n          fastbootSync?.files ?? new Set(),\n          this.resolvableExtensionsPattern,\n          this.podModulePrefix()\n        )\n    );\n  }\n\n  private prepareAsset(asset: Asset, appFiles: AppFiles[], prepared: Map<string, InternalAsset>, emberENV: EmberENV) {\n    if (asset.kind === 'ember') {\n      let prior = this.assets.get(asset.relativePath);\n      let parsed: ParsedEmberAsset;\n      if (prior && prior.kind === 'built-ember' && prior.parsedAsset.validFor(asset)) {\n        // we can reuse the parsed html\n        parsed = prior.parsedAsset;\n        parsed.html.clear();\n      } else {\n        parsed = new ParsedEmberAsset(asset);\n      }\n      this.insertEmberApp(parsed, appFiles, prepared, emberENV);\n      prepared.set(asset.relativePath, new BuiltEmberAsset(parsed));\n    } else {\n      prepared.set(asset.relativePath, asset);\n    }\n  }\n\n  private prepareAssets(\n    requestedAssets: Asset[],\n    appFiles: AppFiles[],\n    emberENV: EmberENV\n  ): Map<string, InternalAsset> {\n    let prepared: Map<string, InternalAsset> = new Map();\n    for (let asset of requestedAssets) {\n      this.prepareAsset(asset, appFiles, prepared, emberENV);\n    }\n    return prepared;\n  }\n\n  private assetIsValid(asset: InternalAsset, prior: InternalAsset | undefined): boolean {\n    if (!prior) {\n      return false;\n    }\n    switch (asset.kind) {\n      case 'on-disk':\n        return prior.kind === 'on-disk' && prior.size === asset.size && prior.mtime === asset.mtime;\n      case 'in-memory':\n        return prior.kind === 'in-memory' && stringOrBufferEqual(prior.source, asset.source);\n      case 'built-ember':\n        return prior.kind === 'built-ember' && prior.source === asset.source;\n      case 'concatenated-asset':\n        return (\n          prior.kind === 'concatenated-asset' &&\n          prior.sources.length === asset.sources.length &&\n          prior.sources.every((priorFile, index) => {\n            let newFile = asset.sources[index];\n            return this.assetIsValid(newFile, priorFile);\n          })\n        );\n    }\n  }\n\n  private updateOnDiskAsset(asset: OnDiskAsset) {\n    let destination = join(this.root, asset.relativePath);\n    ensureDirSync(dirname(destination));\n    copySync(asset.sourcePath, destination, { dereference: true });\n  }\n\n  private updateInMemoryAsset(asset: InMemoryAsset) {\n    let destination = join(this.root, asset.relativePath);\n    ensureDirSync(dirname(destination));\n    writeFileSync(destination, asset.source, 'utf8');\n  }\n\n  private updateBuiltEmberAsset(asset: BuiltEmberAsset) {\n    let destination = join(this.root, asset.relativePath);\n    ensureDirSync(dirname(destination));\n    writeFileSync(destination, asset.source, 'utf8');\n  }\n\n  private async updateConcatenatedAsset(asset: ConcatenatedAsset) {\n    let concat = new SourceMapConcat({\n      outputFile: join(this.root, asset.relativePath),\n      mapCommentType: asset.relativePath.endsWith('.js') ? 'line' : 'block',\n      baseDir: this.root,\n    });\n    if (process.env.EMBROIDER_CONCAT_STATS) {\n      let MeasureConcat = (await import('@embroider/core/src/measure-concat')).default;\n      concat = new MeasureConcat(asset.relativePath, concat, this.root);\n    }\n    for (let source of asset.sources) {\n      switch (source.kind) {\n        case 'on-disk':\n          concat.addFile(explicitRelative(this.root, source.sourcePath));\n          break;\n        case 'in-memory':\n          if (typeof source.source !== 'string') {\n            throw new Error(`attempted to concatenated a Buffer-backed in-memory asset`);\n          }\n          concat.addSpace(source.source);\n          break;\n        default:\n          assertNever(source);\n      }\n    }\n    await concat.end();\n  }\n\n  private async updateAssets(requestedAssets: Asset[], appFiles: AppFiles[], emberENV: EmberENV) {\n    let assets = this.prepareAssets(requestedAssets, appFiles, emberENV);\n    for (let asset of assets.values()) {\n      if (this.assetIsValid(asset, this.assets.get(asset.relativePath))) {\n        continue;\n      }\n      debug('rebuilding %s', asset.relativePath);\n      switch (asset.kind) {\n        case 'on-disk':\n          this.updateOnDiskAsset(asset);\n          break;\n        case 'in-memory':\n          this.updateInMemoryAsset(asset);\n          break;\n        case 'built-ember':\n          this.updateBuiltEmberAsset(asset);\n          break;\n        case 'concatenated-asset':\n          await this.updateConcatenatedAsset(asset);\n          break;\n        default:\n          assertNever(asset);\n      }\n    }\n    for (let oldAsset of this.assets.values()) {\n      if (!assets.has(oldAsset.relativePath)) {\n        unlinkSync(join(this.root, oldAsset.relativePath));\n      }\n    }\n    this.assets = assets;\n    return [...assets.values()];\n  }\n\n  private gatherAssets(inputPaths: OutputPaths<TreeNames>): Asset[] {\n    // first gather all the assets out of addons\n    let assets: Asset[] = [];\n    for (let pkg of this.allActiveAddons) {\n      if (pkg.meta['public-assets']) {\n        for (let [filename, appRelativeURL] of Object.entries(pkg.meta['public-assets'] || {})) {\n          let sourcePath = resolvePath(pkg.root, filename);\n          let stats = statSync(sourcePath);\n          assets.push({\n            kind: 'on-disk',\n            sourcePath,\n            relativePath: appRelativeURL,\n            mtime: stats.mtimeMs,\n            size: stats.size,\n          });\n        }\n      }\n    }\n\n    if (this.activeFastboot) {\n      const source = `\n      (function(){\n        var key = '_embroider_macros_runtime_config';\n        if (!window[key]){ window[key] = [];}\n        window[key].push(function(m) {\n          m.setGlobalConfig('fastboot', Object.assign({}, m.getGlobalConfig().fastboot, { isRunning: true }));\n        });\n      }())`;\n      assets.push({\n        kind: 'in-memory',\n        source,\n        relativePath: 'assets/embroider_macros_fastboot_init.js',\n      });\n    }\n\n    // and finally tack on the ones from our app itself\n    return assets.concat(this.extractAssets(inputPaths));\n  }\n\n  private firstBuild = true;\n\n  async build(inputPaths: OutputPaths<TreeNames>) {\n    // on the first build, we lock down the macros config. on subsequent builds,\n    // this doesn't do anything anyway because it's idempotent.\n    this.compatApp.macrosConfig.finalize();\n\n    // on first build, clear the output directory completely\n    if (this.firstBuild) {\n      rmSync(this.root, { recursive: true, force: true });\n      this.firstBuild = false;\n    }\n\n    let appFiles = this.updateAppJS(inputPaths.appJS);\n    let emberENV = this.configTree.readConfig().EmberENV;\n    let assets = this.gatherAssets(inputPaths);\n\n    let finalAssets = await this.updateAssets(assets, appFiles, emberENV);\n\n    let assetPaths = assets.map(asset => asset.relativePath);\n\n    if (this.activeFastboot) {\n      // when using fastboot, our own package.json needs to be in the output so fastboot can read it.\n      assetPaths.push('package.json');\n    }\n\n    for (let asset of finalAssets) {\n      // our concatenated assets all have map files that ride along. Here we're\n      // telling the final stage packager to be sure and serve the map files\n      // too.\n      if (asset.kind === 'concatenated-asset') {\n        assetPaths.push(asset.sourcemapPath);\n      }\n    }\n\n    let meta: AppMeta = {\n      type: 'app',\n      version: 2,\n      assets: assetPaths,\n      babel: {\n        filename: '_babel_config_.js',\n        isParallelSafe: true, // TODO\n        majorVersion: this.compatApp.babelMajorVersion(),\n        fileFilter: '_babel_filter_.js',\n      },\n      'root-url': this.rootURL(),\n    };\n\n    // all compat apps are auto-upgraded, there's no v2 app format here\n    meta['auto-upgraded'] = true;\n\n    let pkg = this.combinePackageJSON(meta);\n    writeFileSync(join(this.root, 'package.json'), JSON.stringify(pkg, null, 2), 'utf8');\n\n    let resolverConfig = this.resolverConfig(appFiles);\n    this.addResolverConfig(resolverConfig);\n    let babelConfig = this.babelConfig(resolverConfig);\n    this.addBabelConfig(babelConfig);\n  }\n\n  private combinePackageJSON(meta: AppMeta): object {\n    let pkgLayers: any[] = [this.origAppPackage.packageJSON];\n    let fastbootConfig = this.fastbootConfig;\n    if (fastbootConfig) {\n      // fastboot-specific package.json output is allowed to add to our original package.json\n      pkgLayers.push(fastbootConfig.packageJSON);\n    }\n    // but our own new v2 app metadata takes precedence over both\n    pkgLayers.push({ keywords: ['ember-addon'], 'ember-addon': meta });\n    return combinePackageJSON(...pkgLayers);\n  }\n\n  private etcOptions(resolverConfig: CompatResolverOptions): EtcOptions {\n    let transforms = this.compatApp.htmlbarsPlugins;\n\n    let { plugins: macroPlugins, setConfig } = MacrosConfig.transforms();\n    setConfig(this.compatApp.macrosConfig);\n    for (let macroPlugin of macroPlugins) {\n      transforms.push(macroPlugin as any);\n    }\n\n    if (\n      this.options.staticComponents ||\n      this.options.staticHelpers ||\n      this.options.staticModifiers ||\n      (globalThis as any).embroider_audit\n    ) {\n      let opts: ResolverTransformOptions = {\n        appRoot: resolverConfig.appRoot,\n        emberVersion: this.emberVersion(),\n      };\n      transforms.push([require.resolve('./resolver-transform'), opts]);\n    }\n\n    let resolver = new Resolver(resolverConfig);\n    let resolution = resolver.nodeResolve(\n      'ember-source/vendor/ember/ember-template-compiler',\n      resolvePath(this.root, 'package.json')\n    );\n    if (resolution.type !== 'real') {\n      throw new Error(`bug: unable to resolve ember-template-compiler from ${this.root}`);\n    }\n\n    return {\n      transforms,\n      compilerPath: resolution.filename,\n      enableLegacyModules: ['ember-cli-htmlbars', 'ember-cli-htmlbars-inline-precompile', 'htmlbars-inline-precompile'],\n    };\n  }\n\n  @Memoize()\n  private get portableHints(): PortableHint[] {\n    return this.options.pluginHints.map(hint => {\n      let cursor = join(this.origAppPackage.root, 'package.json');\n      for (let i = 0; i < hint.resolve.length; i++) {\n        let target = hint.resolve[i];\n        if (i < hint.resolve.length - 1) {\n          target = join(target, 'package.json');\n        }\n        cursor = resolve.sync(target, { basedir: dirname(cursor) });\n      }\n\n      return {\n        requireFile: cursor,\n        useMethod: hint.useMethod,\n        packageVersion: maybeNodeModuleVersion(cursor),\n      };\n    });\n  }\n\n  private addBabelConfig(pconfig: { config: TransformOptions; isParallelSafe: boolean }) {\n    if (!pconfig.isParallelSafe) {\n      warn('Your build is slower because some babel plugins are non-serializable');\n    }\n    writeFileSync(\n      join(this.root, '_babel_config_.js'),\n      `module.exports = ${JSON.stringify(pconfig.config, null, 2)}`,\n      'utf8'\n    );\n    writeFileSync(\n      join(this.root, '_babel_filter_.js'),\n      babelFilterTemplate({ skipBabel: this.options.skipBabel, appRoot: this.origAppPackage.root }),\n      'utf8'\n    );\n  }\n\n  private addResolverConfig(config: CompatResolverOptions) {\n    outputJSONSync(join(locateEmbroiderWorkingDir(this.compatApp.root), 'resolver.json'), config, { spaces: 2 });\n  }\n\n  private shouldSplitRoute(routeName: string) {\n    return (\n      !this.options.splitAtRoutes ||\n      this.options.splitAtRoutes.find(pattern => {\n        if (typeof pattern === 'string') {\n          return pattern === routeName;\n        } else {\n          return pattern.test(routeName);\n        }\n      })\n    );\n  }\n\n  private splitRoute(\n    routeName: string,\n    files: RouteFiles,\n    addToParent: (routeName: string, filename: string) => void,\n    addLazyBundle: (routeNames: string[], files: string[]) => void\n  ) {\n    let shouldSplit = routeName && this.shouldSplitRoute(routeName);\n    let ownFiles = [];\n    let ownNames = new Set() as Set<string>;\n\n    if (files.template) {\n      if (shouldSplit) {\n        ownFiles.push(files.template);\n        ownNames.add(routeName);\n      } else {\n        addToParent(routeName, files.template);\n      }\n    }\n\n    if (files.controller) {\n      if (shouldSplit) {\n        ownFiles.push(files.controller);\n        ownNames.add(routeName);\n      } else {\n        addToParent(routeName, files.controller);\n      }\n    }\n\n    if (files.route) {\n      if (shouldSplit) {\n        ownFiles.push(files.route);\n        ownNames.add(routeName);\n      } else {\n        addToParent(routeName, files.route);\n      }\n    }\n\n    for (let [childName, childFiles] of files.children) {\n      this.splitRoute(\n        `${routeName}.${childName}`,\n        childFiles,\n\n        (childRouteName: string, childFile: string) => {\n          // this is our child calling \"addToParent\"\n          if (shouldSplit) {\n            ownFiles.push(childFile);\n            ownNames.add(childRouteName);\n          } else {\n            addToParent(childRouteName, childFile);\n          }\n        },\n        (routeNames: string[], files: string[]) => {\n          addLazyBundle(routeNames, files);\n        }\n      );\n    }\n\n    if (ownFiles.length > 0) {\n      addLazyBundle([...ownNames], ownFiles);\n    }\n  }\n\n  private topAppJSAsset(engines: AppFiles[], prepared: Map<string, InternalAsset>): InternalAsset {\n    let [app, ...childEngines] = engines;\n    let relativePath = `assets/${this.origAppPackage.name}.js`;\n    return this.appJSAsset(relativePath, app, childEngines, prepared, {\n      autoRun: this.compatApp.autoRun,\n      appBoot: !this.compatApp.autoRun ? this.compatApp.appBoot.readAppBoot() : '',\n      mainModule: explicitRelative(dirname(relativePath), 'app'),\n      appConfig: this.configTree.readConfig().APP,\n    });\n  }\n\n  @Memoize()\n  private get staticAppPathsPattern(): RegExp | undefined {\n    if (this.options.staticAppPaths.length > 0) {\n      return new RegExp(\n        '^(?:' + this.options.staticAppPaths.map(staticAppPath => escapeRegExp(staticAppPath)).join('|') + ')(?:$|/)'\n      );\n    }\n  }\n\n  private requiredOtherFiles(appFiles: AppFiles): readonly string[] {\n    let pattern = this.staticAppPathsPattern;\n    if (pattern) {\n      return appFiles.otherAppFiles.filter(f => {\n        return !pattern!.test(f);\n      });\n    } else {\n      return appFiles.otherAppFiles;\n    }\n  }\n\n  private appJSAsset(\n    relativePath: string,\n    appFiles: AppFiles,\n    childEngines: AppFiles[],\n    prepared: Map<string, InternalAsset>,\n    entryParams?: Partial<Parameters<typeof entryTemplate>[0]>\n  ): InternalAsset {\n    let cached = prepared.get(relativePath);\n    if (cached) {\n      return cached;\n    }\n\n    let eagerModules: string[] = [];\n\n    let requiredAppFiles = [this.requiredOtherFiles(appFiles)];\n    if (!this.options.staticComponents) {\n      requiredAppFiles.push(appFiles.components);\n    }\n    if (!this.options.staticHelpers) {\n      requiredAppFiles.push(appFiles.helpers);\n    }\n    if (!this.options.staticModifiers) {\n      requiredAppFiles.push(appFiles.modifiers);\n    }\n\n    let styles = [];\n    // only import styles from engines with a parent (this excludeds the parent application) as their styles\n    // will be inserted via a direct <link> tag.\n    if (appFiles.engine.parent && appFiles.engine.package.isLazyEngine()) {\n      let implicitStyles = this.impliedAssets('implicit-styles', appFiles);\n      for (let style of implicitStyles) {\n        styles.push({\n          path: explicitRelative('assets/_engine_', style.relativePath),\n        });\n      }\n\n      let engineMeta = appFiles.engine.package.meta as AddonMeta;\n      if (engineMeta && engineMeta['implicit-styles']) {\n        for (let style of engineMeta['implicit-styles']) {\n          styles.push({\n            path: explicitRelative(dirname(relativePath), join(appFiles.engine.appRelativePath, style)),\n          });\n        }\n      }\n    }\n\n    let lazyEngines: { names: string[]; path: string }[] = [];\n    for (let childEngine of childEngines) {\n      let asset = this.appJSAsset(\n        `assets/_engine_/${encodeURIComponent(childEngine.engine.package.name)}.js`,\n        childEngine,\n        [],\n        prepared\n      );\n      if (childEngine.engine.package.isLazyEngine()) {\n        lazyEngines.push({\n          names: [childEngine.engine.package.name],\n          path: explicitRelative(dirname(relativePath), asset.relativePath),\n        });\n      } else {\n        eagerModules.push(explicitRelative(dirname(relativePath), asset.relativePath));\n      }\n    }\n    let lazyRoutes: { names: string[]; path: string }[] = [];\n    for (let [routeName, routeFiles] of appFiles.routeFiles.children) {\n      this.splitRoute(\n        routeName,\n        routeFiles,\n        (_: string, filename: string) => {\n          requiredAppFiles.push([filename]);\n        },\n        (routeNames: string[], files: string[]) => {\n          let routeEntrypoint = `assets/_route_/${encodeURIComponent(routeNames[0])}.js`;\n          if (!prepared.has(routeEntrypoint)) {\n            prepared.set(routeEntrypoint, this.routeEntrypoint(appFiles, routeEntrypoint, files));\n          }\n          lazyRoutes.push({\n            names: routeNames,\n            path: this.importPaths(appFiles, routeEntrypoint).buildtime,\n          });\n        }\n      );\n    }\n\n    let [fastboot, nonFastboot] = partition(excludeDotFiles(flatten(requiredAppFiles)), file =>\n      appFiles.isFastbootOnly.get(file)\n    );\n    let amdModules = nonFastboot.map(file => this.importPaths(appFiles, file));\n    let fastbootOnlyAmdModules = fastboot.map(file => this.importPaths(appFiles, file));\n\n    // this is a backward-compatibility feature: addons can force inclusion of\n    // modules.\n    eagerModules.push('./-embroider-implicit-modules.js');\n\n    let params = { amdModules, fastbootOnlyAmdModules, lazyRoutes, lazyEngines, eagerModules, styles };\n    if (entryParams) {\n      Object.assign(params, entryParams);\n    }\n\n    let source = entryTemplate(params);\n\n    let asset: InternalAsset = {\n      kind: 'in-memory',\n      source,\n      relativePath,\n    };\n    prepared.set(relativePath, asset);\n    return asset;\n  }\n\n  private importPaths({ engine }: AppFiles, engineRelativePath: string) {\n    let noHBS = engineRelativePath.replace(this.resolvableExtensionsPattern, '').replace(/\\.hbs$/, '');\n    return {\n      runtime: `${engine.modulePrefix}/${noHBS}`,\n      buildtime: posix.join(engine.package.name, engineRelativePath),\n    };\n  }\n\n  private routeEntrypoint(appFiles: AppFiles, relativePath: string, files: string[]) {\n    let [fastboot, nonFastboot] = partition(files, file => appFiles.isFastbootOnly.get(file));\n\n    let asset: InternalAsset = {\n      kind: 'in-memory',\n      source: routeEntryTemplate({\n        files: nonFastboot.map(f => this.importPaths(appFiles, f)),\n        fastbootOnlyFiles: fastboot.map(f => this.importPaths(appFiles, f)),\n      }),\n      relativePath,\n    };\n    return asset;\n  }\n\n  private testJSEntrypoint(appFiles: AppFiles[], prepared: Map<string, InternalAsset>): InternalAsset {\n    let asset = prepared.get(`assets/test.js`);\n    if (asset) {\n      return asset;\n    }\n\n    // We're only building tests from the first engine (the app). This is the\n    // normal thing to do -- tests from engines don't automatically roll up into\n    // the app.\n    let engine = appFiles[0];\n\n    const myName = 'assets/test.js';\n\n    // tests necessarily also include the app. This is where we account for\n    // that. The classic solution was to always include the app's separate\n    // script tag in the tests HTML, but that isn't as easy for final stage\n    // packagers to understand. It's better to express it here as a direct\n    // module dependency.\n    let eagerModules: string[] = [\n      'ember-testing',\n      explicitRelative(dirname(myName), this.topAppJSAsset(appFiles, prepared).relativePath),\n    ];\n\n    let amdModules: { runtime: string; buildtime: string }[] = [];\n    // this is a backward-compatibility feature: addons can force inclusion of\n    // test support modules.\n    eagerModules.push('./-embroider-implicit-test-modules.js');\n\n    for (let relativePath of engine.tests) {\n      amdModules.push(this.importPaths(engine, relativePath));\n    }\n\n    let source = entryTemplate({\n      amdModules,\n      eagerModules,\n      testSuffix: true,\n    });\n\n    asset = {\n      kind: 'in-memory',\n      source,\n      relativePath: myName,\n    };\n    prepared.set(asset.relativePath, asset);\n    return asset;\n  }\n}\n\nfunction defaultAddonPackageRules(): PackageRules[] {\n  return readdirSync(join(__dirname, 'addon-dependency-rules'))\n    .map(filename => {\n      if (filename.endsWith('.js')) {\n        // eslint-disable-next-line @typescript-eslint/no-require-imports\n        return require(join(__dirname, 'addon-dependency-rules', filename)).default;\n      }\n    })\n    .filter(Boolean)\n    .reduce((a, b) => a.concat(b), []);\n}\n\nconst entryTemplate = jsHandlebarsCompile(`\nimport { importSync as i, macroCondition, getGlobalConfig } from '@embroider/macros';\nlet w = window;\nlet d = w.define;\n\n{{#if styles}}\n  if (macroCondition(!getGlobalConfig().fastboot?.isRunning)) {\n    {{#each styles as |stylePath| ~}}\n      i(\"{{js-string-escape stylePath.path}}\");\n    {{/each}}\n  }\n{{/if}}\n\n{{#each eagerModules as |eagerModule| ~}}\n  i(\"{{js-string-escape eagerModule}}\");\n{{/each}}\n\n{{#each amdModules as |amdModule| ~}}\n  d(\"{{js-string-escape amdModule.runtime}}\", function(){ return i(\"{{js-string-escape amdModule.buildtime}}\");});\n{{/each}}\n\n{{#if fastbootOnlyAmdModules}}\n  if (macroCondition(getGlobalConfig().fastboot?.isRunning)) {\n    {{#each fastbootOnlyAmdModules as |amdModule| ~}}\n      d(\"{{js-string-escape amdModule.runtime}}\", function(){ return i(\"{{js-string-escape amdModule.buildtime}}\");});\n    {{/each}}\n  }\n{{/if}}\n\n\n{{#if lazyRoutes}}\nw._embroiderRouteBundles_ = [\n  {{#each lazyRoutes as |route|}}\n  {\n    names: {{json-stringify route.names}},\n    load: function() {\n      return import(\"{{js-string-escape route.path}}\");\n    }\n  },\n  {{/each}}\n]\n{{/if}}\n\n{{#if lazyEngines}}\nw._embroiderEngineBundles_ = [\n  {{#each lazyEngines as |engine|}}\n  {\n    names: {{json-stringify engine.names}},\n    load: function() {\n      return import(\"{{js-string-escape engine.path}}\");\n    }\n  },\n  {{/each}}\n]\n{{/if}}\n\n{{#if autoRun ~}}\nif (!runningTests) {\n  i(\"{{js-string-escape mainModule}}\").default.create({{json-stringify appConfig}});\n}\n{{else  if appBoot ~}}\n  {{ appBoot }}\n{{/if}}\n\n{{#if testSuffix ~}}\n  {{!- TODO: both of these suffixes should get dynamically generated so they incorporate\n       any content-for added by addons. -}}\n\n\n  {{!- this is the traditional tests-suffix.js -}}\n  i('../tests/test-helper');\n  EmberENV.TESTS_FILE_LOADED = true;\n{{/if}}\n`) as (params: {\n  amdModules: { runtime: string; buildtime: string }[];\n  fastbootOnlyAmdModules?: { runtime: string; buildtime: string }[];\n  eagerModules?: string[];\n  autoRun?: boolean;\n  appBoot?: string;\n  mainModule?: string;\n  appConfig?: unknown;\n  testSuffix?: boolean;\n  lazyRoutes?: { names: string[]; path: string }[];\n  lazyEngines?: { names: string[]; path: string }[];\n  styles?: { path: string }[];\n}) => string;\n\nconst routeEntryTemplate = jsHandlebarsCompile(`\nimport { importSync as i } from '@embroider/macros';\nlet d = window.define;\n{{#each files as |amdModule| ~}}\nd(\"{{js-string-escape amdModule.runtime}}\", function(){ return i(\"{{js-string-escape amdModule.buildtime}}\");});\n{{/each}}\n{{#if fastbootOnlyFiles}}\n  import { macroCondition, getGlobalConfig } from '@embroider/macros';\n  if (macroCondition(getGlobalConfig().fastboot?.isRunning)) {\n    {{#each fastbootOnlyFiles as |amdModule| ~}}\n    d(\"{{js-string-escape amdModule.runtime}}\", function(){ return i(\"{{js-string-escape amdModule.buildtime}}\");});\n    {{/each}}\n  }\n{{/if}}\n`) as (params: {\n  files: { runtime: string; buildtime: string }[];\n  fastbootOnlyFiles: { runtime: string; buildtime: string }[];\n}) => string;\n\nfunction stringOrBufferEqual(a: string | Buffer, b: string | Buffer): boolean {\n  if (typeof a === 'string' && typeof b === 'string') {\n    return a === b;\n  }\n  if (a instanceof Buffer && b instanceof Buffer) {\n    return Buffer.compare(a, b) === 0;\n  }\n  return false;\n}\n\nconst babelFilterTemplate = jsHandlebarsCompile(`\nconst { babelFilter } = require(${JSON.stringify(require.resolve('@embroider/core'))});\nmodule.exports = babelFilter({{json-stringify skipBabel}}, \"{{js-string-escape appRoot}}\");\n`) as (params: { skipBabel: Options['skipBabel']; appRoot: string }) => string;\n\nfunction combinePackageJSON(...layers: object[]) {\n  function custom(objValue: any, srcValue: any, key: string, _object: any, _source: any, stack: { size: number }) {\n    if (key === 'keywords' && stack.size === 0) {\n      if (Array.isArray(objValue)) {\n        return objValue.concat(srcValue);\n      }\n    }\n  }\n  return mergeWith({}, ...layers, custom);\n}\n\nfunction addCachablePlugin(babelConfig: TransformOptions) {\n  if (Array.isArray(babelConfig.plugins) && babelConfig.plugins.length > 0) {\n    const plugins = Object.create(null);\n    plugins[cacheBustingPluginPath] = cacheBustingPluginVersion;\n\n    for (const plugin of babelConfig.plugins) {\n      let absolutePathToPlugin: string;\n      if (Array.isArray(plugin) && typeof plugin[0] === 'string') {\n        absolutePathToPlugin = plugin[0] as string;\n      } else if (typeof plugin === 'string') {\n        absolutePathToPlugin = plugin;\n      } else {\n        throw new Error(`[Embroider] a babel plugin without an absolute path was from: ${plugin}`);\n      }\n\n      plugins[absolutePathToPlugin] = maybeNodeModuleVersion(absolutePathToPlugin);\n    }\n\n    babelConfig.plugins.push([\n      cacheBustingPluginPath,\n      {\n        plugins,\n      },\n    ]);\n  }\n}\n\nfunction excludeDotFiles(files: string[]) {\n  return files.filter(file => !file.startsWith('.') && !file.includes('/.'));\n}\n\ninterface TreeNames {\n  appJS: BroccoliNode;\n  htmlTree: BroccoliNode;\n  publicTree: BroccoliNode | undefined;\n  configTree: BroccoliNode;\n}\n\ntype EmberENV = unknown;\n\ntype InternalAsset = OnDiskAsset | InMemoryAsset | BuiltEmberAsset | ConcatenatedAsset;\n\nclass ParsedEmberAsset {\n  kind: 'parsed-ember' = 'parsed-ember';\n  relativePath: string;\n  fileAsset: EmberAsset;\n  html: PreparedEmberHTML;\n\n  constructor(asset: EmberAsset) {\n    this.fileAsset = asset;\n    this.html = new PreparedEmberHTML(asset);\n    this.relativePath = asset.relativePath;\n  }\n\n  validFor(other: EmberAsset) {\n    return this.fileAsset.mtime === other.mtime && this.fileAsset.size === other.size;\n  }\n}\n\nclass BuiltEmberAsset {\n  kind: 'built-ember' = 'built-ember';\n  relativePath: string;\n  parsedAsset: ParsedEmberAsset;\n  source: string;\n\n  constructor(asset: ParsedEmberAsset) {\n    this.parsedAsset = asset;\n    this.source = asset.html.dom.serialize();\n    this.relativePath = asset.relativePath;\n  }\n}\n\nclass ConcatenatedAsset {\n  kind: 'concatenated-asset' = 'concatenated-asset';\n  constructor(\n    public relativePath: string,\n    public sources: (OnDiskAsset | InMemoryAsset)[],\n    private resolvableExtensions: RegExp\n  ) {}\n  get sourcemapPath() {\n    return this.relativePath.replace(this.resolvableExtensions, '') + '.map';\n  }\n}\n"]}