{"version":3,"file":"ember-engines.js","sourceRoot":"","sources":["ember-engines.ts"],"names":[],"mappings":";;;;;AAAA,2DAAkC;AAClC,4FAAgD;AAGhD,MAAM,GAAI,SAAQ,oCAAM;IAGtB,YAAY,SAAc,EAAE,MAAc,EAAE,OAAe;QACzD,KAAK,CAAC,SAAS,EAAE,EAAS,CAAC,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;IACD,aAAa,CAAC,OAAe;QAC3B,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;IACpD,CAAC;CACF;AAED,eAAqB,SAAQ,kBAAO;IAClC,IAAI,WAAW;QACb,IAAI,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC;QAE7B,0FAA0F;QAC1F,IAAI,IAAI,CAAC,kBAAkB,CAAC,EAAE,CAAC;YAC7B,IAAI,CAAC,kBAAkB,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,uBAAuB,CAAC,CAAC;QACrG,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED,IAAI,MAAM;QACR,gFAAgF;QAChF,8DAA8D;QAC9D,OAAO,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,EAAE,kCAAkC,EAAE,EAAE,CAAC,CAAC;IACvE,CAAC;CACF;AAjBD,4BAiBC","sourcesContent":["import V1Addon from '../v1-addon';\nimport Filter from 'broccoli-persistent-filter';\nimport type { AddonMeta } from '@embroider/core';\n\nclass Awk extends Filter {\n  search: string;\n  replace: string;\n  constructor(inputNode: any, search: string, replace: string) {\n    super(inputNode, {} as any);\n    this.search = search;\n    this.replace = replace;\n  }\n  processString(content: string) {\n    return content.replace(this.search, this.replace);\n  }\n}\n\nexport default class extends V1Addon {\n  get packageMeta(): Partial<AddonMeta> {\n    let meta = super.packageMeta;\n\n    // remove from the build so that it will not be present even with staticAddonTrees = false\n    if (meta['implicit-modules']) {\n      meta['implicit-modules'] = meta['implicit-modules'].filter(mod => mod !== './-private/router-ext');\n    }\n\n    return meta;\n  }\n\n  get v2Tree() {\n    // dont allow ember-engines to reopen the router as we are doing things with it.\n    // this simple deletes the import so the reopen doesn't happen\n    return new Awk(super.v2Tree, `import '../-private/router-ext';`, '');\n  }\n}\n"]}