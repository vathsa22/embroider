{"version":3,"file":"store.js","sourceRoot":"","sources":["store.ts"],"names":[],"mappings":";;AACA,8CAA8C;AAE9C,MAAqB,cAAe,SAAQ,0BAAa;IACvD,IAAI,WAAW;;QACb,IAAI,IAAI,GAAG,KAAK,CAAC,WAAW,CAAC;QAE7B,0EAA0E;QAC1E,0EAA0E;QAC1E,4EAA4E;QAC5E,0EAA0E;QAC1E,2CAA2C;QAC3C,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,GAAG,CAAC,MAAA,IAAI,CAAC,kBAAkB,CAAC,mCAAI,EAAE,CAAC,EAAE,YAAY,CAAC,CAAC;QAE/E,OAAO,IAAI,CAAC;IACd,CAAC;CACF;AAbD,iCAaC","sourcesContent":["import type { AddonMeta } from '@embroider/core';\nimport { EmberDataBase } from '../ember-data';\n\nexport default class EmberDataStore extends EmberDataBase {\n  get packageMeta(): Partial<AddonMeta> {\n    let meta = super.packageMeta;\n\n    // this is here because the compat-adapter for @ember-data/debug adds this\n    // to externals because it has an undeclared peerDep on us, and thus might\n    // resolve totally incorrect copies. By making it external we leave it up to\n    // runtime, where we will find this implicit-module for the actual copy of\n    // @ember-data/store that is active in app.\n    meta['implicit-modules'] = [...(meta['implicit-modules'] ?? []), './index.js'];\n\n    return meta;\n  }\n}\n"]}