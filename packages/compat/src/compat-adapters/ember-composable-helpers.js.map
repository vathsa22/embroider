{"version":3,"file":"ember-composable-helpers.js","sourceRoot":"","sources":["ember-composable-helpers.ts"],"names":[],"mappings":";;;;;AAAA,2DAAkC;AAClC,+BAA4B;AAE5B,2BAA8D;AAC9D,uCAAsD;AACtD,qDAAyC;AACzC,sCAAwC;AACxC,kDAA0D;AAE1D,eAAqB,SAAQ,kBAAO;IAClC,IAAI,MAAM;QACR,iFAAiF;QACjF,oEAAoE;QACpE,oEAAoE;QACpE,OAAO,IAAI,YAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;CACF;AAPD,4BAOC;AAED,MAAM,YAAa,SAAQ,wBAAM;IAC/B,YAAY,SAAe;QACzB,KAAK,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC;IACvB,CAAC;IAED,KAAK,CAAC,KAAK;QACT,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC;QACpB,IAAI,aAAa,GAAG,IAAA,WAAI,EAAC,IAAI,CAAC,UAAU,EAAE,OAAO,EAAE,SAAS,CAAC,CAAC;QAC9D,IAAI,eAAe,GAAG,IAAA,WAAI,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,CAAC;QAE1D,KAAK,IAAI,QAAQ,IAAI,IAAA,gBAAW,EAAC,aAAa,CAAC,EAAE,CAAC;YAChD,IAAI,CAAC,IAAA,yBAAc,EAAC,IAAA,WAAI,EAAC,eAAe,EAAE,QAAQ,CAAC,CAAC,EAAE,CAAC;gBACrD,IAAA,qBAAU,EAAC,IAAA,WAAI,EAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,CAAC;YAC5C,CAAC;QACH,CAAC;QACD,IAAI,GAAG,GAAG,IAAA,iBAAY,EAAC,IAAA,WAAI,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,EAAE,MAAM,CAAC,CAAC;QACrE,IAAI,OAAO,GAAG,CAAC,IAAA,sCAAuB,EAAC,EAAE,WAAW,EAAE,IAAI,CAAC,UAAU,EAAE,CAAC,CAAC,CAAC;QAC1E,IAAA,kBAAa,EAAC,IAAA,WAAI,EAAC,IAAI,CAAC,UAAU,EAAE,UAAU,CAAC,EAAE,IAAA,gBAAS,EAAC,GAAG,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,CAAE,CAAC,IAAK,CAAC,CAAC;IAC1G,CAAC;CACF","sourcesContent":["import V1Addon from '../v1-addon';\nimport { join } from 'path';\nimport type { Node } from 'broccoli-node-api';\nimport { readdirSync, writeFileSync, readFileSync } from 'fs';\nimport { pathExistsSync, removeSync } from 'fs-extra';\nimport { Funnel } from 'broccoli-funnel';\nimport { transform } from '@babel/core';\nimport { stripBadReexportsPlugin } from '../compat-utils';\n\nexport default class extends V1Addon {\n  get v2Tree(): Node {\n    // workaround for https://github.com/DockYard/ember-composable-helpers/issues/308\n    // and https://github.com/DockYard/ember-composable-helpers/pull/302\n    // and https://github.com/DockYard/ember-composable-helpers/pull/307\n    return new MatchHelpers(super.v2Tree);\n  }\n}\n\nclass MatchHelpers extends Funnel {\n  constructor(inputTree: Node) {\n    super(inputTree, {});\n  }\n\n  async build() {\n    await super.build();\n    let appHelpersDir = join(this.outputPath, '_app_', 'helpers');\n    let addonHelpersDir = join(this.inputPaths[0], 'helpers');\n\n    for (let filename of readdirSync(appHelpersDir)) {\n      if (!pathExistsSync(join(addonHelpersDir, filename))) {\n        removeSync(join(appHelpersDir, filename));\n      }\n    }\n    let src = readFileSync(join(this.inputPaths[0], 'index.js'), 'utf8');\n    let plugins = [stripBadReexportsPlugin({ resolveBase: this.outputPath })];\n    writeFileSync(join(this.outputPath, 'index.js'), transform(src, { plugins, configFile: false })!.code!);\n  }\n}\n"]}