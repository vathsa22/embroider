{"version":3,"file":"ember-cli-deprecation-workflow.js","sourceRoot":"","sources":["ember-cli-deprecation-workflow.ts"],"names":[],"mappings":";;;;;;;;;;;AAAA,2DAAkC;AAClC,+BAAqC;AACrC,qDAA+C;AAC/C,sDAA8B;AAC9B,2DAA6C;AAC7C,sEAA0C;AAC1C,oDAA4B;AAE5B,eAAqB,SAAQ,kBAAO;IAClC,qHAAqH;IACrH,yCAAyC;IACzC,MAAM,CAAC,kBAAkB,CAAC,aAAkB;QAC1C,OAAO,gBAAM,CAAC,EAAE,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACvD,CAAC;IAGD,IAAI,OAAO;QACT,2EAA2E;QAC3E,sEAAsE;QACtE,0EAA0E;QAC1E,4EAA4E;QAC5E,oDAAoD;QACpD,2EAA2E;QAC3E,wBAAwB;QACxB,IAAI,WAAW,GAAG,IAAA,cAAO,EACvB,iBAAO,CAAC,IAAI,CAAC,4CAA4C,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC,CACjG,CAAC;QACF,IAAI,IAAI,GAAG,IAAA,yBAAW,EAAC,IAAI,8BAAY,CAAC,IAAA,WAAI,EAAC,WAAW,EAAE,QAAQ,CAAC,CAAC,EAAE;YACpE,OAAO,EAAE,QAAQ;SAClB,CAAC,CAAC;QACH,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC;QAC1B,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,OAAO,KAAK,CAAC;IACf,CAAC;CACF;AA1BD,4BA0BC;AAlBC;IADC,IAAA,4BAAO,GAAE;wCAkBT","sourcesContent":["import V1Addon from '../v1-addon';\nimport { join, dirname } from 'path';\nimport { UnwatchedDir } from 'broccoli-source';\nimport resolve from 'resolve';\nimport { Memoize } from 'typescript-memoize';\nimport buildFunnel from 'broccoli-funnel';\nimport semver from 'semver';\n\nexport default class extends V1Addon {\n  // v2.0.0 removes the usage of `ember-debug-handlers-polyfill`, so we only need to apply the adapter if we're working\n  // with a version that is older than that\n  static shouldApplyAdapter(addonInstance: any) {\n    return semver.lt(addonInstance.pkg.version, '2.0.0');\n  }\n\n  @Memoize()\n  get v2Trees() {\n    // ember-cli-deprecation-workflow does `app.import` of a file that isn't in\n    // its own vendor tree, the file is in ember-debug-handlers-polyfill's\n    // vendor tree. It presumably does this because (1) it fails to call super\n    // in `included()`, so the ember-debug-handlers-polyfill won't be able to do\n    // its own app.import, and (2) even if you fix that,\n    // ember-debug-handlers-polyfill itself has a bug that makes it not work as\n    // a second-level addon.\n    let polyfillDir = dirname(\n      resolve.sync('ember-debug-handlers-polyfill/package.json', { basedir: this.addonInstance.root })\n    );\n    let tree = buildFunnel(new UnwatchedDir(join(polyfillDir, 'vendor')), {\n      destDir: 'vendor',\n    });\n    let trees = super.v2Trees;\n    trees.push(tree);\n    return trees;\n  }\n}\n"]}