{"version":3,"file":"hbs-to-js-broccoli-plugin.js","sourceRoot":"","sources":["hbs-to-js-broccoli-plugin.ts"],"names":[],"mappings":";;;;;AACA,4FAAgD;AAChD,0CAA0C;AAC1C,+BAA4B;AAE5B,MAAqB,mBAAoB,SAAQ,oCAAM;IACrD,YAAY,SAAe;QACzB,KAAK,CAAC,SAAS,EAAE;YACf,IAAI,EAAE,mCAAmC;YACzC,OAAO,EAAE,IAAI;YACb,UAAU,EAAE,CAAC,KAAK,EAAE,YAAY,CAAC;SAClC,CAAC,CAAC;IACL,CAAC;IAED,eAAe,CAAC,YAAoB,EAAE,KAA+C;QACnF,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,KAAK,CAAC,EAAE,CAAC;YAC1C,OAAO,IAAI,CAAC;QACd,CAAC;QACD,KAAK,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,YAAY,CAAC,EAAE,CAAC;YACtC,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,GAAG,GAAG,EAAE,CAAC;gBACtD,2EAA2E;gBAC3E,2EAA2E;gBAC3E,0BAA0B;gBAC1B,OAAO,YAAY,GAAG,KAAK,CAAC;YAC9B,CAAC;QACH,CAAC;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,aAAa,CAAC,MAAc,EAAE,YAAoB;QAChD,OAAO,IAAA,cAAO,EAAC,MAAM,EAAE,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC,CAAC;IACrD,CAAC;IACD,OAAO;QACL,OAAO,IAAA,WAAI,EAAC,SAAS,EAAE,IAAI,CAAC,CAAC;IAC/B,CAAC;CACF;AA9BD,sCA8BC","sourcesContent":["import type { Node } from 'broccoli-node-api';\nimport Filter from 'broccoli-persistent-filter';\nimport { hbsToJS } from '@embroider/core';\nimport { join } from 'path';\n\nexport default class TemplateCompileTree extends Filter {\n  constructor(inputTree: Node) {\n    super(inputTree, {\n      name: `embroider-template-compile-stage1`,\n      persist: true,\n      extensions: ['hbs', 'handlebars'],\n    });\n  }\n\n  getDestFilePath(relativePath: string, entry: Parameters<Filter['getDestFilePath']>[1]) {\n    if (this.isDirectory(relativePath, entry)) {\n      return null;\n    }\n    for (let ext of ['hbs', 'handlebars']) {\n      if (relativePath.slice(-ext.length - 1) === '.' + ext) {\n        // we deliberately don't chop off the .hbs before appending .js, because if\n        // the user has both .js` and .hbs` side-by-side we don't want our new file\n        // to collide with theirs.\n        return relativePath + '.js';\n      }\n    }\n    return null;\n  }\n\n  processString(source: string, relativePath: string) {\n    return hbsToJS(source, { filename: relativePath });\n  }\n  baseDir() {\n    return join(__dirname, '..');\n  }\n}\n"]}